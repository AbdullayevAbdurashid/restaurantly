{"version":3,"sources":["components/content/content.jsx","components/content/placeholder.png","components/bottomCart/bottomcart.jsx","components/button/buttonMain.jsx","components/check/check.jsx","home.js","components/overall/overall.jsx","api/sessions.jsx","api/users.jsx","context/useAuth.jsx","components/waiters/login.jsx","components/waiters/back.jpg","components/waiters/waiters.jsx","App.js","index.js","ip.txt","context/ipProvider.jsx"],"names":["Content","data","loading","TabPane","Tabs","useContext","IpContext","ip","useState","quality","setQuality","pricer","setPrice","useCart","addItem","keys","Object","addCart","obj","handleChange","e","id","target","value","type","size","map","key","indx","tab","once","className","style","padding","marginBottom","container","spacing","index","_id","item","xs","sm","md","lg","in","onClick","temprice","price","eval","qual","tempObj","name","productImage","component","alt","image","placeholder","gutterBottom","variant","displayType","suffix","thousandSeparator","renderText","marginTop","color","Group","defaultValue","Button","disabled","price05","price07","display","gap","flexWrap","n","width","height","animation","Bottomcart","isOpen","opens","foobar","func","socket","iOS","process","browser","test","navigator","userAgent","isEmpty","cartTotal","items","updateItemQuantity","emptyCart","anim","setAnim","input","sessionStorage","getItem","afterEmtyping","emit","table","money","foods","time","Date","getHours","getMinutes","axios","method","url","date","message","success","window","location","reload","itemss","hidden","opacity","show","innerHeight","newDate","month","getMonth","getDate","getFullYear","anchor","open","onClose","disableBackdropTransition","disableDiscovery","maxWidth","initial","x","animate","transition","stiffness","duration","top","right","flexDirection","marginLeft","fontSize","div","setTimeout","whileTap","scale","maxHeight","variants","quantity","p","button","error","ButtonMain","styles","onClicks","content","motion","Check","isModalVisible","setIsModalVisible","margin","to","shape","icon","Divider","background","title","onOk","onCancel","okText","cancelText","visible","useStyles","makeStyles","stickToBottom","zIndex","position","bottom","root","StyledBadge","withStyles","theme","badge","border","palette","paper","Badge","Home","classes","history","useHistory","totalItems","setData","setError","setLoading","setValue","setOpens","count","setCount","useEffect","token","URLSearchParams","search","get","setItem","a","then","res","catch","description","onItemAdd","onItemUpdate","onItemRemove","Grid","isMobileOnly","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","showZero","badgeContent","push","Overall","service","setService","setsingleTable","parseInt","inputValue","setInputValue","inputValues","setInputValues","isIncorrect","setIncorrect","showModal","on","servicee","allOrders","allOrdersFromSingleTable","filter","reduce","acc","forEach","foodObj","q","allpPrice","allPrice","entries","allprice","columns","dataIndex","render","text","fontWeight","Container","y","transform","texAlign","min","max","filterTables","dataSource","Math","trunc","Password","isMobile","email","password","post","session","response","delete","localStorage","AuthContext","createContext","user","login","logout","AuthProvider","children","setUser","loadingInitial","setLoadingInitial","sessionsApi","loginName","finally","undefined","pathname","usersApi","_error","memoedValue","useMemo","Provider","useAuth","Login","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","username","onFinishFailed","errorInfo","console","log","autoComplete","requiredMark","Item","rules","required","valuePropName","offset","media","paddingTop","expand","transitions","create","shortest","expandOpen","Waiter","myorder","setOrder","getOrder","setVisible","setConfirmLoading","expanded","setExpanded","expandedOrder","setExpandedOrder","reverse","React","confirmLoading","handleCancel","backgroundImage","backgound","backgroundRepeat","backgroundSize","defaultActiveKey","centered","Grow","Card","CardContent","length","Number","split","CardActions","disableSpacing","IconButton","clsx","isExpanded","handleExpandClick","onConfirm","okButtonProps","Collapse","timeout","unmountOnExit","handleExpandOrder","AuthenticatedRoute","roles","props","Routes","path","exact","App","ReactDOM","StrictMode","document","getElementById","IPprovider","IPADDRES","setIPADDRES","fetch","raw","io"],"mappings":"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","file":"static/js/main.d6920103.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Radio } from \"antd\";\r\nimport placeholder from \"./placeholder.png\";\r\nimport \"./content.css\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Tabs } from \"antd\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\n//MUI\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\n//Others\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\nfunction Content({ data, loading }) {\r\n  const { TabPane } = Tabs;\r\n  const [ip] = useContext(IpContext)\r\n  const [quality, setQuality] = useState({});\r\n  const [pricer, setPrice] = useState({});\r\n  const { addItem } = useCart();\r\n  let keys = Object.keys(data);\r\n\r\n  const addCart = (obj) => {\r\n    addItem(obj);\r\n  };\r\n\r\n  const handleChange = (e, quality, id) => {\r\n    setPrice({ ...pricer, [id]: e.target.value });\r\n    setQuality({ ...quality, [id]: quality });\r\n  };\r\n\r\n  return (\r\n    <div\r\n    >\r\n      <Tabs type=\"card\" size={\"large\"}>\r\n        {keys &&\r\n          keys.map((key, indx) => (\r\n            <TabPane tab={key} key={indx}>\r\n              <LazyLoad once={true}>\r\n                <div>\r\n                  <div\r\n                    key={indx}\r\n                    className=\"h-screen mywrapper\"\r\n                    style={{\r\n\r\n                      padding: \"10px\",\r\n                      marginBottom: \"70PX\",\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      {data &&\r\n                        data[key].map(({ _id: id, ...obj }, index) => (\r\n                          <Grid item xs={6} sm={6} md={4} lg={3}>\r\n                            <Grow in={true}>\r\n                              <Card className=\"min-h-90\">\r\n                                <div\r\n                                  onClick={() => {\r\n                                    let temprice = pricer[id]\r\n                                      ? pricer[id]\r\n                                      : \"obj.price\";\r\n                                    let price = eval(temprice);\r\n                                    let qual = quality[id] ? quality[id] : \"1\";\r\n\r\n                                    let tempObj = {\r\n                                      id: id + \"quality\" + qual,\r\n                                      quality: qual,\r\n                                      name: obj.name + \" \" + qual,\r\n                                      price: price,\r\n                                      productImage: obj.productImage,\r\n                                    };\r\n\r\n                                    addCart(tempObj);\r\n                                  }}\r\n                                >\r\n                                  <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Ovqat\"\r\n                                    className=\"h-32\"\r\n                                    image={\r\n                                      obj.productImage === \"null\" ||\r\n                                        !obj.productImage\r\n                                        ? placeholder\r\n                                        : `${ip}/` +\r\n                                        obj.productImage\r\n                                    }\r\n                                  />\r\n                                  <CardContent>\r\n                                    <Typography\r\n                                      gutterBottom\r\n                                      variant=\"h6\"\r\n                                      component=\"h3\"\r\n                                    >\r\n                                      {obj.name}\r\n                                    </Typography>\r\n                                    <CurrencyFormat\r\n                                      value={\r\n                                        pricer[id]\r\n                                          ? eval(pricer[id])\r\n                                          : obj.price\r\n                                      }\r\n                                      displayType={\"text\"}\r\n                                      suffix=\" sum\"\r\n                                      thousandSeparator={true}\r\n                                      renderText={(value) => (\r\n                                        <p\r\n                                          className=\"secondName\"\r\n                                          style={{ marginTop: \"1px\" }}\r\n                                        >\r\n                                          {value}{\" \"}\r\n                                        </p>\r\n                                      )}\r\n                                    />\r\n\r\n                                    <Typography\r\n                                      variant=\"body2\"\r\n                                      color=\"textSecondary\"\r\n                                      component=\"p\"\r\n                                    >\r\n                                      Qoshish uchun ustiga bosin\r\n                                    </Typography>\r\n                                  </CardContent>\r\n                                </div>\r\n                                <CardActions>\r\n                                  <Radio.Group\r\n                                    defaultValue=\"obj.price\"\r\n                                    size=\"medium\"\r\n                                  >\r\n                                    <Radio.Button\r\n                                      onClick={(e) => handleChange(e, \"1\", id)}\r\n                                      disabled={obj.price ? false : true}\r\n                                      value=\"obj.price\"\r\n                                    >\r\n                                      1.0\r\n                                    </Radio.Button>\r\n                                    <Radio.Button\r\n                                      disabled={obj.price05 ? false : true}\r\n                                      onClick={(e) =>\r\n                                        handleChange(e, \"0.5\", id)\r\n                                      }\r\n                                      value=\"obj.price05\"\r\n                                    >\r\n                                      0.5\r\n                                    </Radio.Button>\r\n                                    <Radio.Button\r\n                                      disabled={obj.price07 ? false : true}\r\n                                      onClick={(e) =>\r\n                                        handleChange(e, \"0.7\", id)\r\n                                      }\r\n                                      value=\"obj.price07\"\r\n                                    >\r\n                                      0.7\r\n                                    </Radio.Button>\r\n                                  </Radio.Group>\r\n                                  {/* <motion.button\r\n                                  className=\"pplus\"\r\n                                  onClick={() => {\r\n                                    let temprice = pricer[id] ? pricer[id] : \"obj.price\";\r\n                                    let price = eval(temprice);\r\n                                    let qual = quality[id] ? quality[id] : \"1\";\r\n\r\n                                    let tempObj = {\r\n                                      id: id + \"quality\" + qual,\r\n                                      quality: qual,\r\n                                      name: obj.name + \" \" + qual,\r\n                                      price: price,\r\n                                      productImage: obj.productImage\r\n                                    };\r\n\r\n                                    addCart(tempObj);\r\n                                  }}\r\n                                >\r\n\r\n                                  <AddIcon />\r\n                                </motion.button> */}\r\n                                </CardActions>\r\n                              </Card>\r\n                            </Grow>\r\n                          </Grid>\r\n                          // <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                          //   <div>\r\n\r\n                          //     <LazyLoad height={65}>\r\n                          //       <motion.div key={obj.id} className=\"products\">\r\n\r\n                          //\r\n\r\n                          //         <div>\r\n                          //           <p className=\"firstName\">{obj.name}</p>\r\n\r\n                          //         </div>\r\n\r\n                          //       </motion.div>\r\n                          //     </LazyLoad>\r\n\r\n                          //   </div>\r\n                          // </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              </LazyLoad>\r\n            </TabPane>\r\n          ))}\r\n\r\n        {loading === true && (\r\n          <div\r\n            style={{\r\n              marginTop: \"100px\",\r\n              display: \"flex\",\r\n              gap: \"20px\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            {[1, 2, 3, 4, 5].map((n) => (\r\n              <div style={{ width: \"200px\", marginTop: \"10px\" }}>\r\n                <Skeleton\r\n                  height={40}\r\n                  style={{ marginBottom: -10, width: \"100%\" }}\r\n                />\r\n\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  height={100}\r\n                  style={{ marginBottom: -10 }}\r\n                />\r\n                <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                </div>\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  height={20}\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    marginTop: -10,\r\n                    width: \"70%\",\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/placeholder.50838fd7.png\";","import React, { useState, useContext } from 'react'\r\nimport 'react-spring-bottom-sheet/dist/style.css'\r\nimport { useCart } from \"react-use-cart\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../check/check.css\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { message } from \"antd\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\nfunction Bottomcart({ opens: isOpen, func: foobar, }) {\r\n\r\n\r\n    const [ip, socket] = useContext(IpContext)\r\n\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n    const {\r\n        isEmpty,\r\n        cartTotal,\r\n        items,\r\n        updateItemQuantity,\r\n        emptyCart,\r\n    } = useCart();\r\n    function onDismiss() {\r\n        foobar(false);\r\n    }\r\n\r\n    ;\r\n    //Refs and states\r\n    const [anim, setAnim] = useState(0);\r\n    const input = sessionStorage.getItem(\"table\");\r\n\r\n\r\n    //Tracking click of end order vutton\r\n    const handleCLicker = () => {\r\n        if (isEmpty === false) {\r\n            if (input !== \"null\" || null) {\r\n                setAnim(1600);\r\n                setTimeout(function () {\r\n                    afterEmtyping()\r\n                }, 1000);\r\n            } else {\r\n                message.error(\"QR CODNI QAYTA SKANER QILING!\");\r\n            }\r\n        }\r\n    };\r\n    const afterEmtyping = () => {\r\n        socket.emit(\"post-order\", {\r\n            table: input,\r\n            money: cartTotal,\r\n            foods: items,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        });\r\n        axios({\r\n            method: \"post\",\r\n            url: `${ip}/status`,\r\n            data: {\r\n                date: date,\r\n                money: cartTotal,\r\n            },\r\n        });\r\n        emptyCart(); // runs first\r\n        setAnim(0); // runs second\r\n        message.success('Buyurtmangiz jonatildi');\r\n        window.location.reload();\r\n\r\n    }\r\n    //Emty cart animation\r\n    const cartEmpty = () => {\r\n        setAnim(1600);\r\n        setTimeout(function () {\r\n            emptyCart(); // runs first\r\n            window.location.reload();\r\n\r\n            setAnim(0); // runs second\r\n        }, 1000);\r\n    };\r\n    //Framer motion stuff\r\n    const itemss = {\r\n        hidden: { opacity: 0 },\r\n        show: { opacity: 1 },\r\n    };\r\n    const height = window.innerHeight - 325 + \"px\";\r\n    //Taking date\r\n    let newDate = new Date();\r\n    let month = newDate.getMonth() + 1;\r\n    let date = newDate.getDate() + \"/\" + month + \"/\" + newDate.getFullYear();\r\n\r\n    return (\r\n        <div>\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                width={200}\r\n                open={isOpen}\r\n                onClose={onDismiss}\r\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n            >\r\n                <Container maxWidth=\"sm\">\r\n\r\n                    <div\r\n                        initial={{ x: 360 }}\r\n                        animate={{ x: 0 }}\r\n                        transition={{ type: \"tween\", stiffness: 50, duration: 0.5 }}\r\n                        style={{ marginTop: \"20px\", padding: \"10px\" }}\r\n                    >\r\n                        <div style={{ display: \"flex\", top: 0, right: 0, }}>\r\n\r\n                            <div style={{\r\n                                display: \"flex\", flexDirection: \"row\",\r\n                                width: \"100%\",\r\n                                height: \"30px\",\r\n                                marginLeft: \"auto\",\r\n                                marginTop: \"auto\",\r\n                                marginBottom: \"5px\",\r\n                            }}>     <h3 style={{\r\n                                color: \"black\", fontSize: \"1.1rem\",\r\n                            }}>\r\n                                    {\" \"}\r\n                                    Summa:\r\n                                    <CurrencyFormat\r\n                                        value={cartTotal}\r\n                                        displayType={\"text\"}\r\n                                        suffix=\" sum\"\r\n                                        thousandSeparator={true}\r\n                                        renderText={(value) => (\r\n                                            <span style={{ color: \"#187CDF\", fontSize: \"1.1rem\" }}>\r\n                                                {value}\r\n                                            </span>\r\n                                        )}\r\n                                    />\r\n                                </h3>\r\n                                <motion.div\r\n                                    onClick={() => cartEmpty()}\r\n                                    whileTap={{ scale: 1.1 }}\r\n                                    style={{\r\n                                        width: \"80px\",\r\n                                        height: \"30px\",\r\n                                        marginLeft: \"auto\",\r\n                                        marginTop: \"auto\",\r\n                                        marginBottom: \"5px\",\r\n                                    }}\r\n                                >\r\n                                    <DeleteIcon\r\n                                        style={{\r\n                                            color: \"#d60505\",\r\n                                            width: \"100px\",\r\n                                            height: \"35px\",\r\n                                            marginLeft: \"auto\",\r\n                                            marginBottom: \"0px\",\r\n                                        }}\r\n                                    />\r\n                                </motion.div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Divider />\r\n\r\n                        <div className=\"mywrapperr\" style={{ maxHeight: height, marginBottom: \"70px\" }}>\r\n                            <div className=\"main\" >\r\n                                {items.map((item) => (\r\n                                    <div key={item.id} className=\"itemMain\">\r\n                                        <motion.div\r\n                                            variants={itemss}\r\n                                            transition={{ duration: 0.5 }}\r\n                                            initial={{ x: 460 }}\r\n                                            animate={{ x: anim }}\r\n                                            className=\"productts\"\r\n                                        >\r\n                                            <div>\r\n                                                <p className=\"firstName\">{item.name}</p>\r\n\r\n                                                <CurrencyFormat\r\n                                                    value={item.price * item.quantity}\r\n                                                    displayType={\"text\"}\r\n                                                    suffix=\" sum\"\r\n                                                    thousandSeparator={true}\r\n                                                    renderText={(value) => (\r\n                                                        <motion.p className=\"secondName\"> {value} </motion.p>\r\n                                                    )}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"productss\">\r\n                                                <motion.button\r\n                                                    className=\"pplus\"\r\n                                                    onClick={() =>\r\n                                                        updateItemQuantity(item.id, item.quantity + 1)\r\n                                                    }\r\n                                                >\r\n                                                    <AddIcon fontSize=\"small\" />\r\n                                                </motion.button>\r\n                                                <p className=\"quan\">{item.quantity}</p>\r\n                                                <motion.button\r\n                                                    whileTap={{ scale: 1.1 }}\r\n                                                    className=\"pplus\"\r\n                                                    onClick={() =>\r\n                                                        updateItemQuantity(item.id, item.quantity - 1)\r\n                                                    }\r\n                                                >\r\n                                                    <RemoveIcon fontSize=\"small\" />\r\n                                                </motion.button>\r\n                                            </div>\r\n                                        </motion.div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Button stuff */}\r\n                            <Divider />\r\n                            <div>\r\n                                <div className=\"par\">\r\n\r\n                                    <div className='paragraph'>\r\n\r\n                                    </div>\r\n                                    <motion.button\r\n                                        whileTap={{ scale: 1.1 }}\r\n                                        className=\"pl fixed\"\r\n                                        onClick={handleCLicker}\r\n                                    >\r\n                                        Jonatish{\" \"}\r\n                                    </motion.button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div >\r\n                </Container>\r\n\r\n            </SwipeableDrawer>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Bottomcart\r\n","import React from 'react'\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function ButtonMain({ styles, onClicks, content }) {\r\n    return (\r\n        <motion.button\r\n            className={styles}\r\n            onClick={onClicks}\r\n            whileTap={{ scale: 0.7 }}>\r\n\r\n            {content}\r\n        </motion.button >\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport { motion } from \"framer-motion\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"./check.css\";\r\nimport axios from \"axios\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Button } from \"antd\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Modal } from \"antd\";\r\nimport PlaylistAddCheckOutlinedIcon from '@material-ui/icons/PlaylistAddCheckOutlined';\r\nimport { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport ButtonMain from \"../button/buttonMain\";\r\n\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\n\r\nfunction Check() {\r\n\r\n  const [ip, socket] = useContext(IpContext)\r\n\r\n\r\n  const input = sessionStorage.getItem(\"table\");\r\n\r\n  const {\r\n    isEmpty,\r\n    cartTotal,\r\n    items,\r\n    updateItemQuantity,\r\n    emptyCart,\r\n  } = useCart();\r\n\r\n  //Refs and states\r\n  const [anim, setAnim] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  //Sending data to server to orders page\r\n  const setPosst = () => {\r\n    socket.emit(\"post-order\", {\r\n      table: input,\r\n      money: cartTotal,\r\n      foods: items,\r\n      time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n    });\r\n  };\r\n  //Sending data to server to stats page\r\n\r\n  const setPost = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${ip}/status`,\r\n      data: {\r\n        date: date,\r\n        money: cartTotal,\r\n      },\r\n    });\r\n  };\r\n  //Tracking click of end order vutton\r\n  const handleCLicker = () => {\r\n    if (isEmpty === false) {\r\n      if (input !== \"null\" || null) {\r\n        setAnim(1600);\r\n        setTimeout(function () {\r\n          setPosst();\r\n          setPost();\r\n          emptyCart(); // runs first\r\n          setAnim(0); // runs second\r\n          setIsModalVisible(false);\r\n        }, 1000);\r\n      } else {\r\n        message.error(\"QR CODNI QAYTA SKANER QILISNG\");\r\n      }\r\n    }\r\n  };\r\n  //Emty cart animation\r\n  const cartEmpty = () => {\r\n    setAnim(1600);\r\n    setTimeout(function () {\r\n      emptyCart(); // runs first\r\n      setAnim(0); // runs second\r\n    }, 1000);\r\n  };\r\n  //Framer motion stuff\r\n  const itemss = {\r\n    hidden: { opacity: 0 },\r\n    show: { opacity: 1 },\r\n  };\r\n  const height = window.innerHeight - 205 + \"px\";\r\n\r\n  //Taking date\r\n  let newDate = new Date();\r\n  let month = newDate.getMonth() + 1;\r\n  let date = newDate.getDate() + \"/\" + month + \"/\" + newDate.getFullYear();\r\n  return (\r\n\r\n    <div\r\n      style={{ marginTop: \"6px\" }\r\n      }\r\n    >\r\n      <div className=\"mywrapperr\" style={{ height: height }}>\r\n        <div style={{ display: \"flex\" }}>\r\n\r\n          <p style={{ fontSize: \"22px\", marginBottom: \"0px\", margin: \"0px auto\", }}>Chek:</p>\r\n          <Link to=\"/check\">\r\n\r\n            <Button type=\"dashed\" shape=\"\" icon={<PlaylistAddCheckOutlinedIcon />} >\r\n            </Button>\r\n          </Link>\r\n\r\n          <div style={{\r\n            display: \"flex\", flexDirection: \"column\",\r\n            width: \"80px\",\r\n            height: \"30px\",\r\n            marginLeft: \"auto\",\r\n            marginTop: \"auto\",\r\n            marginBottom: \"5px\",\r\n          }}>\r\n\r\n\r\n          </div>\r\n          <motion.div\r\n            onClick={() => cartEmpty()}\r\n            whileTap={{ scale: 1.1 }}\r\n            style={{\r\n              fontSize: \"14px\",\r\n              width: \"80px\",\r\n              height: \"30px\",\r\n              marginLeft: \"auto\",\r\n              marginTop: \"auto\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <DeleteIcon\r\n              style={{\r\n                color: \"#d60505\",\r\n                fontSize: \"14px\",\r\n                width: \"100px\",\r\n                height: \"40px\",\r\n                marginLeft: \"auto\",\r\n                marginBottom: \"0px\",\r\n              }}\r\n            />\r\n          </motion.div>\r\n        </div>\r\n\r\n        <Divider style={{ background: \"blue\" }} />\r\n\r\n        <div className=\"main\" style={{ height: height }}>\r\n          {items.map((item) => (\r\n            <div key={item.id} className=\"itemMain\">\r\n              <motion.div\r\n                variants={itemss}\r\n                transition={{ duration: 0.5 }}\r\n                initial={{ x: 460 }}\r\n                animate={{ x: anim }}\r\n                className=\"productts\"\r\n              >\r\n                <div>\r\n                  <p className=\"firstName\">{item.name}</p>\r\n\r\n                  <CurrencyFormat\r\n                    value={item.price * item.quantity}\r\n                    displayType={\"text\"}\r\n                    suffix=\" sum\"\r\n                    thousandSeparator={true}\r\n                    renderText={(value) => (\r\n                      <motion.p className=\"secondName\"> {value} </motion.p>\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className=\"productss\">\r\n                  <ButtonMain\r\n                    styles=\"pplus\"\r\n                    content={<AddIcon />}\r\n                    onClicks={() =>\r\n                      updateItemQuantity(item.id, item.quantity + 1)\r\n                    }\r\n                  />\r\n                  <p className=\"quan\">{item.quantity}</p>\r\n                  <ButtonMain\r\n                    styles=\"pplus\"\r\n                    content={<RemoveIcon />}\r\n                    onClicks={() =>\r\n                      updateItemQuantity(item.id, item.quantity - 1)\r\n                    }\r\n                  />\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Button stuff */}\r\n\r\n        <div className=\"p\">\r\n          <div className='p'>\r\n            <h3 style={{\r\n              color: \"black\", fontSize: \"24px\", margin: \"auto\",\r\n            }}>\r\n              {\" \"}\r\n              Jami:\r\n              <CurrencyFormat\r\n                value={cartTotal}\r\n                displayType={\"text\"}\r\n                suffix=\" sum\"\r\n                thousandSeparator={true}\r\n                renderText={(value) => (\r\n                  <span style={{ color: \"#187CDF\", fontSize: \"22px\" }}>\r\n                    {value}\r\n                  </span>\r\n                )}\r\n              />\r\n            </h3>\r\n          </div>\r\n\r\n          <ButtonMain\r\n            styles=\"pl\"\r\n            onClicks={showModal}\r\n            content=\"Jonatish\"\r\n          />\r\n\r\n        </div>\r\n      </div >\r\n      <Modal\r\n        title=\"Tasdiqlash\"\r\n        onOk={handleCLicker}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        okText=\"Ha\"\r\n        cancelText=\"Yoq\"\r\n        visible={isModalVisible}\r\n        height={100}\r\n      >\r\n        <p>Tasdiqlaysizmi?</p>\r\n      </Modal>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nexport default Check;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Empty } from \"antd\";\r\nimport Content from \"./components/content/content\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { CartProvider } from \"react-use-cart\";\r\nimport Check from \"./components/check/check\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MobileView, isMobileOnly } from \"react-device-detect\";\r\nimport Bottomcart from \"./components/bottomCart/bottomcart\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport \"./components/search/search.css\";\r\nimport { IpContext } from \"./context/ipProvider\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickToBottom: {\r\n    zIndex: \"2\",\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n  },\r\n}))(Badge);\r\n\r\nfunction Home() {\r\n  const [ip, socket] = useContext(IpContext);\r\n\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const { totalItems } = useCart();\r\n  const [data, setData] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [opens, setOpens] = useState(false);\r\n\r\n  const [count, setCount] = useState(totalItems);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const query = new URLSearchParams(window.location.search);\r\n    const token = query.get(\"table\");\r\n    sessionStorage.setItem(\"table\", token);\r\n    setTimeout(() => {\r\n      (async function () {\r\n        axios\r\n          .get(`${ip}/data`)\r\n          .then((res) => {\r\n            setData(res.data);\r\n            setLoading(false);\r\n          })\r\n          .catch(() => {\r\n            setError(true);\r\n          });\r\n      })();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  if (error === true)\r\n    return (\r\n      <Empty\r\n        description=\"Server is not working please refresh page or contact administrator\"\r\n        style={{ marginTop: \"200px\" }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <CartProvider\r\n        onItemAdd={() => setCount(count + 1)}\r\n        onItemUpdate={() => setCount(count + 1)}\r\n        onItemRemove={() => setCount(count - 1)}\r\n      >\r\n        <MobileView>\r\n          <Bottomcart opens={opens} func={setOpens} />\r\n        </MobileView>\r\n\r\n        <Grid container spacing={1}>\r\n          {/* <Grid item xs={12} lg={12} sm={12}>\r\n            <Search loading={loading} data={data} />\r\n          </Grid> */}\r\n          <Grid item xs={12} md={8} lg={9} sm={12}>\r\n            <LazyLoad once={true}>\r\n              <Content loading={loading} ip={ip} data={data} />\r\n            </LazyLoad>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} lg={3} sm={12}>\r\n            {isMobileOnly ? null : <Check />}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {isMobileOnly ? (\r\n          <BottomNavigation\r\n            ip={ip}\r\n            socket={socket}\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.stickToBottom}\r\n          >\r\n            <BottomNavigationAction label=\"Asosiy\" icon={<HomeIcon />} />\r\n            <BottomNavigationAction\r\n              onClick={() => setOpens(true)}\r\n              label=\"Savatcha\"\r\n              icon={\r\n                <StyledBadge showZero badgeContent={count} color=\"secondary\">\r\n                  <ShoppingCartIcon />\r\n                </StyledBadge>\r\n              }\r\n            />\r\n            <BottomNavigationAction\r\n              onClick={() => history.push(\"/check\")}\r\n              label=\"Buyurtmalar tarixi\"\r\n              icon={<RestoreIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        ) : null}\r\n      </CartProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Modal, Input, Table, InputNumber } from \"antd\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  stickToBottom: {\r\n    zIndex: \"2\",\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nfunction Overall() {\r\n\r\n  const [ip, socket] = useContext(IpContext)\r\n\r\n\r\n\r\n  //Router stuff\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const input = sessionStorage.getItem(\"table\");\r\n\r\n\r\n  //States \r\n  const [service, setService] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [table, setsingleTable] = useState([false]);\r\n  const [inputValue, setInputValue] = useState(parseInt(input));\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [inputValues, setInputValues] = useState(input);\r\n  const [isIncorrect, setIncorrect] = useState(false);\r\n  const [anim, setAnim] = useState(0);\r\n  const [value, setValue] = useState();\r\n\r\n  //Local password that changes   \r\n  const password = \"admin2020\";\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n\r\n  //Getting order list when page loaded\r\n  useEffect(() => {\r\n    socket.on(\"recieve-order\", (message) => {\r\n      (async function () {\r\n        const { data } = await axios.get(`${ip}/orders`);\r\n        setData(data);\r\n      })();\r\n    });\r\n    (async function () {\r\n      const { data } = await axios.get(`${ip}/orders`);\r\n      const { data: servicee } = await axios.get(\r\n        `${ip}/service`\r\n      );\r\n      setService(servicee);\r\n      setData(data);\r\n      if (data) {\r\n        let allOrders = {};\r\n        let allOrdersFromSingleTable = data\r\n          .filter((obj) => {\r\n            return obj.table === inputValue\r\n          })\r\n          .reduce((acc, obj) => {\r\n            acc.table = obj.table;\r\n            acc.foods = [];\r\n\r\n            acc.id = obj._id;\r\n            if (!acc.money) {\r\n              acc.money = obj.money;\r\n            } else {\r\n              acc.money = acc.money + obj.money;\r\n            }\r\n\r\n            obj.foods.forEach((foodObj) => {\r\n              if (!allOrders[foodObj.name]) {\r\n                allOrders[foodObj.name] = {\r\n                  q: foodObj.quantity,\r\n                  price: foodObj.price,\r\n                  allPrice: foodObj.price * foodObj.quantity,\r\n                };\r\n              } else {\r\n                allOrders[foodObj.name].q =\r\n                  allOrders[foodObj.name].q + foodObj.quantity;\r\n                allOrders[foodObj.name].price =\r\n                  allOrders[foodObj.name].price + foodObj.price;\r\n                allOrders[foodObj.name].allpPrice =\r\n                  allOrders[foodObj.name].allpPrice +\r\n                  foodObj.price * foodObj.quantity;\r\n              }\r\n            });\r\n            return acc;\r\n          }, {});\r\n        allOrders = Object.entries(allOrders).map(([key, value]) => {\r\n          return {\r\n            name: key,\r\n            quantity: value.q,\r\n            price: value.price,\r\n            allprice: value.allPrice,\r\n          };\r\n        });\r\n        allOrdersFromSingleTable.foods = allOrders;\r\n        // allOrdersFromSingleTable is what u should print\r\n        setsingleTable([allOrdersFromSingleTable]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n  //table columns array\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <p>{text}</p>,\r\n    },\r\n    {\r\n      title: \"Narxi\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (value) => (\r\n        <p>\r\n          {\" \"}\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={\"text\"}\r\n            suffix=\" sum\"\r\n            thousandSeparator={true}\r\n            renderText={(value) => <p className=\"\">{value} </p>}\r\n          />\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Soni\",\r\n      dataIndex: \"quantity\",\r\n      key: \"quantity\",\r\n    },\r\n    {\r\n      title: \"Summa\",\r\n      dataIndex: \"allprice\",\r\n      key: \"allPrice\",\r\n      render: (value) => (\r\n        <p>\r\n          {\" \"}\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={\"text\"}\r\n            suffix=\" sum\"\r\n            thousandSeparator={true}\r\n            renderText={(value) => (\r\n              <p style={{ color: \"#187CDF\", fontWeight: \"bold\" }}>{value} </p>\r\n            )}\r\n          />\r\n        </p>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //Function activated when clicked on button\r\n  function filterTables() {\r\n    let allOrders = {};\r\n    let allOrdersFromSingleTable = data\r\n      .filter((obj) => {\r\n        return obj.table === inputValue\r\n      })\r\n      .reduce((acc, obj) => {\r\n        acc.table = obj.table;\r\n        acc.foods = [];\r\n\r\n        acc.id = obj._id;\r\n        if (!acc.money) {\r\n          acc.money = obj.money;\r\n        } else {\r\n          acc.money = acc.money + obj.money;\r\n        }\r\n\r\n        obj.foods.forEach((foodObj) => {\r\n          if (!allOrders[foodObj.name]) {\r\n            allOrders[foodObj.name] = {\r\n              q: foodObj.quantity,\r\n              price: foodObj.price,\r\n              allPrice: foodObj.price * foodObj.quantity,\r\n            };\r\n          } else {\r\n            allOrders[foodObj.name].q =\r\n              allOrders[foodObj.name].q + foodObj.quantity;\r\n            allOrders[foodObj.name].price =\r\n              allOrders[foodObj.name].price + foodObj.price;\r\n            allOrders[foodObj.name].allpPrice =\r\n              allOrders[foodObj.name].allpPrice +\r\n              foodObj.price * foodObj.quantity;\r\n          }\r\n        });\r\n        return acc;\r\n      }, {});\r\n    allOrders = Object.entries(allOrders).map(([key, value]) => {\r\n      return {\r\n        name: key,\r\n        quantity: value.q,\r\n        price: value.price,\r\n        allprice: value.allPrice,\r\n      };\r\n    });\r\n    allOrdersFromSingleTable.foods = allOrders;\r\n    // allOrdersFromSingleTable is what u should print\r\n    setsingleTable([allOrdersFromSingleTable]);\r\n  }\r\n\r\n\r\n  //End order button action\r\n  const deleteObj = (id) => {\r\n    if (inputValues === password) {\r\n      socket.emit(\"done-order\", id);\r\n      setIsModalVisible(false);\r\n\r\n      setTimeout(() => {\r\n        setAnim(1800);\r\n        window.location.reload(true);\r\n\r\n      }, 1000);\r\n    } else {\r\n      setIncorrect(true);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div className=\"cheklist\"\r\n        initial={{ y: -900 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n\r\n        <Link to=\"/\">\r\n          <motion.button\r\n            whileTap={{ scale: 1.1 }}\r\n            className=\"filterButton\"\r\n            style={{\r\n              marginLeft: \"-140px\",\r\n              height: \"35px\",\r\n              transform: \"none\",\r\n              texAlign: \"center\",\r\n            }}\r\n          >\r\n            <ArrowBackOutlinedIcon />\r\n          </motion.button>          </Link>\r\n        <div style={{ marginBottom: \"20px\", width: \"100%\", display: \"flex\" }}>\r\n\r\n          <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n            <p style={{ fontSize: \"16px\" }}>Stol raqami: </p>\r\n            <InputNumber\r\n              placeholder={input}\r\n              defaultValue={input}\r\n              type=\"number\"\r\n              size=\"small\"\r\n              style={{ height: \"25px\", width: \"50px\" }}\r\n              min=\"0\"\r\n              max=\"100\"\r\n              onChange={(e) => setInputValue(parseInt(e))}\r\n            />\r\n          </div>\r\n          <motion.button\r\n            whileTap={{ scale: 1.1 }}\r\n            className=\"filterButton\"\r\n            onClick={() => {\r\n              filterTables();\r\n              setAnim(0);\r\n            }}\r\n          >\r\n            Izlash\r\n          </motion.button>\r\n        </div>\r\n        {table.map((obj, index) => (\r\n          <div>\r\n            <motion.div initial={{ x: 0 }} animate={{ x: anim }}>\r\n              <Table size=\"middle\" columns={columns} dataSource={obj.foods} />\r\n            </motion.div>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"2px\" }}\r\n            >\r\n              <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                {\" \"}\r\n                <CurrencyFormat\r\n                  value={obj.money}\r\n                  displayType={\"text\"}\r\n                  suffix=\" sum\"\r\n                  thousandSeparator={true}\r\n                  renderText={(value) => (\r\n                    <p style={{ fontSize: \"19px\" }}>\r\n                      Jami: {\" \"}\r\n                      <span style={{ fontWeight: \"bold\", color: \"#187CDF\" }}>\r\n                        {value}\r\n                      </span>\r\n                    </p>\r\n                  )}\r\n                />\r\n                <p style={{ fontSize: \"19px\" }}>\r\n                  Usluga: {\"\"}\r\n                  <span style={{ fontWeight: \"bold\", color: \"#187CDF\" }}>\r\n                    {service}%\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div>\r\n                {\" \"}\r\n                <p style={{ fontSize: \"22px\" }}>\r\n                  Hammasi: {\"\"}\r\n                  <CurrencyFormat\r\n                    value={Math.trunc(obj.money + (obj.money / 100) * service)}\r\n                    displayType={\"text\"}\r\n                    suffix=\" sum\"\r\n                    thousandSeparator={true}\r\n                    renderText={(value) => (\r\n                      <span style={{ fontWeight: \"bold\", color: \"#FF3131\" }}>\r\n                        {value}\r\n                      </span>\r\n                    )}\r\n                  />\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <motion.button\r\n              whileTap={{ scale: 1.1 }}\r\n              className=\"pl\"\r\n              style={{ marginTop: \"60px\" }}\r\n              onClick={showModal}\r\n            >\r\n              Pul tolandi\r\n            </motion.button>\r\n            <Modal\r\n              title=\"Parol\"\r\n              onOk={() => deleteObj(obj.table)}\r\n              onCancel={() => setIsModalVisible(false)}\r\n              okText=\"Tasdiqlash\"\r\n              cancelText=\"Orqaga\"\r\n              visible={isModalVisible}\r\n              height={100}\r\n            >\r\n              <p>Parolni Kiriting</p>\r\n\r\n              {isIncorrect ? (\r\n                <h4 className=\"errorInput\" style={{ color: \"red\" }}>\r\n                  Parol Notogri{\" \"}\r\n                </h4>\r\n              ) : null}\r\n\r\n              <Input.Password\r\n                style={{ width: \"300px\" }}\r\n                onChange={(e) => setInputValues(e.target.value)}\r\n                placeholder=\"Parolni kiritng\"\r\n              />\r\n            </Modal>\r\n          </div>\r\n        ))}\r\n      </motion.div>\r\n\r\n      {isMobile ? (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.stickToBottom}\r\n        >\r\n          <BottomNavigationAction label=\"Asosiy\"\r\n            onClick={() => history.push(\"/\")}\r\n\r\n            icon={<HomeIcon />} />\r\n        </BottomNavigation>\r\n      ) : null}\r\n    </Container >\r\n\r\n  );\r\n}\r\n\r\nexport default Overall;\r\n","import axios from \"axios\";\r\n\r\nexport async function login(email, password) {\r\n    const response = await axios.post(\"http://localhost:4000/login\", { session: email, password });\r\n    return response.data;\r\n}\r\n\r\nexport async function logout() {\r\n    const response = await axios.delete(\"/api/sessions\");\r\n\r\n    return response.data.data;\r\n}","import axios from \"axios\";\r\n\r\nexport async function getCurrentUser() {\r\n    const response = await localStorage.getItem(\"details\");\r\n    return response;\r\n}\r\n\r\n","import React, {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as sessionsApi from \"../api/sessions\";\r\nimport * as usersApi from \"../api/users\";\r\n\r\nconst AuthContext = createContext(\r\n    {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n        login: (email, password) => { },\r\n        logout: () => { },\r\n    }\r\n);\r\n\r\nexport function AuthProvider({\r\n    children,\r\n}) {\r\n    const [user, setUser] = useState();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingInitial, setLoadingInitial] = useState(true);\r\n    // We are using `react-router` for this example,\r\n    // but feel free to omit this or use the\r\n    // router of your choice.\r\n    const history = useHistory();\r\n\r\n    // If we change page, reset the error state.\r\n    useEffect(() => {\r\n        if (error) setError(null);\r\n    }, [window.location.pathname]);\r\n\r\n    // Check if there is a currently active session\r\n    // when the provider is mounted for the first time.\r\n    //\r\n    // If there is an error, it means there is no session.\r\n    //\r\n    // Finally, just signal the component that the initial load\r\n    // is over.\r\n    useEffect(() => {\r\n        usersApi.getCurrentUser()\r\n            .then((user) => user === \"false\" ? setUser(null) : setUser(localStorage.getItem(\"details\")))\r\n            .catch((_error) => { })\r\n            .finally(() => setLoadingInitial(false));\r\n    }, []);\r\n\r\n    // Flags the component loading state and posts the login\r\n    // data to the server.\r\n    //\r\n    // An error means that the email/password combination is\r\n    // not valid.\r\n    //\r\n    // Finally, just signal the component that loading the\r\n    // loading state is over.\r\n    function login(email, password) {\r\n        setLoading(true);\r\n\r\n        sessionsApi.login({ email, password })\r\n            .then((res) => {\r\n                localStorage.setItem(\"details\", res.loginName)\r\n                setUser(localStorage.getItem(\"details\"));\r\n                history.push(\"/waiter\");\r\n\r\n            })\r\n            .catch((error) => setError(error.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n\r\n            });\r\n    }\r\n\r\n\r\n\r\n    // Call the logout endpoint and then remove the user\r\n    // from the state.\r\n    function logout() {\r\n        sessionsApi.logout().then(() => setUser(undefined));\r\n    }\r\n\r\n    // Make the provider update only when it should.\r\n    // We only want to force re-renders if the user,\r\n    // loading or error states change.\r\n    //\r\n    // Whenever the `value` passed into a provider changes,\r\n    // the whole tree under the provider re-renders, and\r\n    // that can be very costly! Even in this case, where\r\n    // you only get re-renders when logging in and out\r\n    // we want to keep things very performant.\r\n    const memoedValue = useMemo(\r\n        () => ({\r\n            user,\r\n            loading,\r\n            error,\r\n            login,\r\n            logout,\r\n        }),\r\n        [user, loading, error]\r\n    );\r\n\r\n    // We only want to render the underlying app after we\r\n    // assert for the presence of a current user.\r\n    return (\r\n        <AuthContext.Provider value={memoedValue}>\r\n            {!loadingInitial && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n// Let's only export the `useAuth` hook instead of the context.\r\n// We only want to use the hook directly and never the context component.\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}","import React from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport { Form, Checkbox } from 'antd';\r\nimport { Divider } from 'antd';\r\nimport useAuth from \"../../context/useAuth\";\r\n\r\n\r\nfunction Login() {\r\n    const { login, loading, error } = useAuth();\r\n\r\n    const onFinish = (values) => {\r\n        login(\r\n            values.username,\r\n            values.password\r\n        );\r\n\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"md\" className=\"bg-gray-900  h-screen overflow-hidden\"  >\r\n            <div className=\"m-auto p-4 h-2 \">\r\n                <h1 className=\"text-white font-medium text-3xl \t antialiased\"> Log in </h1>\r\n                <Divider className=\"bg-white\" />\r\n\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                    size={\"large\"}\r\n                    requiredMark={\"optional\"}\r\n\r\n\r\n                >\r\n                    <Form.Item\r\n                        label=\"Login\"\r\n                        name=\"username\"\r\n                        style={{ color: \"white\" }}\r\n                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                    >\r\n                        <input className=\"rounded-xl border-gray-600  bg-gray-900 border-2 text-white p-2 w-full h-10 focus:outline-none  focus:border-green-300\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Parol\"\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                        <input type=\"password\" className=\"rounded-xl border-gray-600  bg-gray-900 border-2 text-white p-2 w-full h-10 focus:outline-none  focus:border-green-300\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 0, span: 16 }}>\r\n                        <Checkbox className=\"text-white\">Remember me</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 32, span: 24 }}>\r\n                        {loading ? <h1 className=\"text-white\"> loading..</h1> : null}\r\n                        <button className=\"w-full   disabled:bg-gray-300 bg-gradient-to-r  duration-500  transition from-green-400 h-10 rounded-xl focus:outline-none focus:ring-4 focus:ring-offset-indigo-800 focus:border-transparent transit to-blue-500  text-white\" type=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                    </Form.Item>\r\n                </Form>\r\n                {error ? <div className=\"bg-red-500 h-5 w-full\"> <h1> Error incorrect login or password </h1></div> : null}\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/back.39f25b08.jpg\";","import React from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport { Tabs } from 'antd';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport clsx from 'clsx';\r\nimport useAuth from \"../../context/useAuth\"\r\nimport backgound from \"./back.jpg\"\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { motion } from 'framer-motion';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Popconfirm } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { message } from 'antd';\r\nimport { IpContext } from \"../../context/ipProvider\"\r\nimport { useContext } from 'react';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        marginBottom: \"5px\",\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n\r\n}));\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        right: -3,\r\n        top: 13,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n        padding: \"0 4px\",\r\n    },\r\n}))(Badge);\r\n\r\n\r\nfunction Waiter() {\r\n    const { user } = useAuth();\r\n    const [ip, socket] = useContext(IpContext)\r\n    const [myorder, setOrder] = useState([])\r\n    const getOrder = (table) => {\r\n        axios.post(`${ip}/occupyOrder`, { table: table, name: user }).then(() => {\r\n            axios.get(`${ip}/waiterOrders/${user}`).then(({ data }) => {\r\n                setOrder(data);\r\n\r\n            });\r\n            axios.get(`${ip}/waiterOrders/new`).then(({ data }) => {\r\n                setData(data);\r\n                setVisible(false);\r\n                setConfirmLoading(false);\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [expandedOrder, setExpandedOrder] = useState(false);\r\n    const notify = () => {\r\n        message.success(\"Yangi zakaz bor\")\r\n    }\r\n    console.log(user)\r\n    useEffect(() => {\r\n        socket.on(\"recieve-order\", (message) => {\r\n            if (message === \"order sent\") {\r\n                notify(\"order recieved\")\r\n            } (async function () {\r\n                const { data } = await axios.get(`${ip}/waiterOrders/new`);\r\n                data.reverse()\r\n                setData(data);\r\n            })();\r\n        });\r\n        (async function () {\r\n            const { data } = await axios.get(`${ip}/waiterOrders/new`);\r\n            data.reverse()\r\n            setData(data);\r\n\r\n        })();\r\n\r\n        (async function () {\r\n            const { data } = await axios.get(`${ip}/waiterOrders/${user}`);\r\n            data.reverse()\r\n            setOrder(data);\r\n\r\n        })();\r\n    }, []);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const handleLogout = () => {\r\n        localStorage.setItem(\"details\", \"false\")\r\n        window.location.reload();\r\n\r\n    }\r\n    const classes = useStyles();\r\n    const handleOk = (table) => {\r\n        setConfirmLoading(true);\r\n        getOrder(table)\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n    const handleExpandClick = (index, isExpanded) => {\r\n        setExpanded({ ...expanded, [index]: !expanded[index] ? true : false });\r\n    };\r\n    const handleExpandOrder = (index) => {\r\n        setExpandedOrder({ ...expandedOrder, [index]: !expandedOrder[index] ? true : false });\r\n    };\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n\r\n    return (\r\n        <div style={{ backgroundImage: `url(${backgound})`, backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\" }} className=\" waiters min-h-screen\">\r\n\r\n            <Container maxWidth=\"md\" className=\" min-h-screen backdrop-filter  backdrop-blur-md\">\r\n\r\n\r\n                <div className=\"text-white bg-image   h-full\">\r\n                    <Tabs defaultActiveKey=\"1\" centered>\r\n                        <TabPane className=\"text-white \" tab=\"Current orders\" key=\"1\">\r\n\r\n                            {data &&\r\n                                data.map((obj, index) => (\r\n                                    <Grow in={true}>\r\n                                        <Card className=\"mb-4\">\r\n                                            <CardContent>\r\n                                                <h1 className=\"text-yellow-500 text-xl font-bold\">\r\n                                                    #{data.length - index}\r\n                                                </h1>\r\n                                                <h3 className=\"text-green-400 -mt-3  text-sm font-bold \">\r\n                                                    {(Number(obj.time.split(\":\")[0]) - new Date().getHours()) === 0 ? (new Date().getMinutes() - Number(obj.time.split(\":\")[1])) + \" min oldin\" : (new Date().getHours() - Number(obj.time.split(\":\")[0])) + \" soat oldin\"}                                             </h3>\r\n                                                <h2 className=\"absolute top-4 right-4  text-yellow-500 text-lg font-bold \">\r\n                                                    Stol: {obj.table}\r\n                                                </h2>\r\n                                                <h3 className=\"text-white text-lg font-medium\">\r\n                                                    Jami taomlar:{data[index].foods.length}\r\n                                                </h3>\r\n\r\n                                            </CardContent>\r\n                                            <CardActions disableSpacing>\r\n\r\n                                                <h3 className=\"text-white text-lg font-medium\">\r\n                                                    Taomlar:\r\n                                                </h3>\r\n                                                <span className=\"inline-block\">\r\n                                                    <IconButton\r\n                                                        className={clsx(classes.expand, {\r\n                                                            [classes.expandOpen]: expanded[index]\r\n                                                                ? expanded[index] : null,\r\n                                                        })}\r\n                                                        onClick={() => handleExpandClick(index)}\r\n                                                        aria-expanded={expanded}\r\n                                                        aria-label=\"show more\"\r\n                                                    >\r\n                                                        <ExpandMoreIcon className=\"text-white  mb-1\" fontSize=\"large\" />\r\n                                                    </IconButton>\r\n                                                    <Popconfirm\r\n                                                        title=\"DO YOU CONFIRM?\"\r\n                                                        visible={visible}\r\n                                                        onConfirm={() => handleOk(obj.table)}\r\n                                                        okButtonProps={{ loading: confirmLoading }}\r\n                                                        onCancel={handleCancel}\r\n                                                    >\r\n                                                        <motion.button\r\n                                                            whileTap={{ scale: 0.9 }}\r\n                                                            onClick={() => setVisible(true)}\r\n                                                            className=\"w-24 absolute bottom-4 right-2 bg-gradient-to-r  d from-blue-700 h-10 rounded-xl  text-lg  focus:ring-offset-indigo-800 focus:border-transparent transit to-blue-800  text-white\" type=\"submit\">\r\n                                                            Olish ✅\r\n                                                        </motion.button>\r\n                                                    </Popconfirm>\r\n                                                </span>\r\n                                            </CardActions>\r\n                                            <Collapse in={expanded[index]\r\n                                                ? expanded[index] : null\r\n                                            } timeout=\"auto\" unmountOnExit>\r\n                                                {\r\n                                                    data[index].foods.map((foodObj, indx) => (\r\n                                                        <CardContent>\r\n                                                            <div key={indx}>\r\n                                                                <span>\r\n                                                                    <p className=\" text-white text-xl  uppercase\">{foodObj.name}</p>\r\n                                                                    <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                                                <h2 className=\" text-yellow-400 text-xl\"> 2x </h2>\r\n\r\n                                                            </div>\r\n\r\n\r\n                                                        </CardContent>\r\n                                                    ))}\r\n                                            </Collapse>\r\n                                        </Card>\r\n                                    </Grow>\r\n\r\n                                ))}\r\n\r\n\r\n\r\n                        </TabPane>\r\n                        <TabPane tab={<StyledBadge showZero badgeContent={myorder.length} color=\"secondary\">\r\n                            <h1 className=\"text-white pt-2  \">\r\n                                My orders\r\n                            </h1>\r\n                        </StyledBadge>} key=\"2\">\r\n\r\n                            {myorder &&\r\n                                myorder.map((obj, index) => (\r\n                                    <Grow in={true}>\r\n                                        <Card className=\"mb-4\">\r\n                                            <CardContent>\r\n                                                <h1 className=\"text-yellow-500 text-xl font-bold\">\r\n                                                    ORDER #325\r\n                                                </h1>\r\n                                                <h3 className=\" text-green-400 -mt-3  text-sm font-bold \">\r\n                                                    12:20\r\n                                                </h3>\r\n                                                <h2 className=\"absolute top-4 right-4  text-yellow-500 text-lg font-bold \">\r\n                                                    Stol: {obj.table}\r\n                                                </h2>\r\n                                                <h3 className=\"text-white text-lg font-medium\">\r\n                                                    Jami taomlar:{myorder[index].foods.length}\r\n                                                </h3>\r\n\r\n                                            </CardContent>\r\n                                            <CardActions disableSpacing>\r\n\r\n                                                <h3 className=\"text-white text-lg font-medium\">\r\n                                                    Taomlar:\r\n                                                </h3>\r\n                                                <span className=\"inline-block\">\r\n                                                    <IconButton\r\n                                                        className={clsx(classes.expand, {\r\n                                                            [classes.expandOpen]: expanded[index]\r\n                                                                ? expanded[index] : null,\r\n                                                        })}\r\n                                                        onClick={() => handleExpandOrder(index)}\r\n                                                        aria-expanded={expanded}\r\n                                                        aria-label=\"show more\"\r\n                                                    >\r\n                                                        <ExpandMoreIcon className=\"text-white  mb-1\" fontSize=\"large\" />\r\n                                                    </IconButton>\r\n                                                    <motion.button\r\n                                                        whileTap={{ scale: 0.9 }}\r\n                                                        onClick={getOrder}\r\n                                                        className=\"w-24 absolute bottom-4 right-2 bg-gradient-to-r  d from-blue-700 h-10 rounded-xl  text-lg  focus:ring-offset-indigo-800 focus:border-transparent transit to-blue-800  text-white\" type=\"submit\">\r\n                                                        Olish ✅\r\n                                                    </motion.button>\r\n                                                </span>\r\n                                            </CardActions>\r\n                                            <Collapse in={expandedOrder[index]\r\n                                                ? expandedOrder[index] : null\r\n                                            } timeout=\"auto\" unmountOnExit>\r\n                                                {\r\n                                                    myorder[index].foods.map((foodObj, indx) => (\r\n                                                        <CardContent>\r\n                                                            <div key={indx}>\r\n                                                                <span>\r\n                                                                    <p className=\" text-white text-xl  uppercase\">{foodObj.name}</p>\r\n                                                                    <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                                                <h2 className=\" text-yellow-400 text-xl\"> 2x </h2>\r\n\r\n                                                            </div>\r\n\r\n\r\n                                                        </CardContent>\r\n                                                    ))}\r\n                                            </Collapse>\r\n                                        </Card>\r\n                                    </Grow>\r\n\r\n                                ))}\r\n\r\n\r\n\r\n\r\n                            {/* <Card className=\"mb-4\">\r\n                                <CardContent>\r\n                                    <h1 className=\"text-yellow-500 text-xl font-bold\">\r\n                                        ORDER #325\r\n                                    </h1>\r\n                                    <h3 className=\" text-green-400 -mt-3  text-sm font-bold \">\r\n                                        12:20\r\n                                    </h3>\r\n                                    <h2 className=\"absolute top-4 right-4  text-yellow-500 text-lg font-bold \">\r\n                                        Stol:12\r\n                                    </h2>\r\n                                    <h3 className=\"text-white text-lg font-medium\">\r\n                                        Jami taomlar:12\r\n                                    </h3>\r\n\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    <h3 className=\"text-white text-lg font-medium\">\r\n                                        Taomlar:\r\n                                    </h3>\r\n                                    <span className=\"inline-block\">\r\n                                        <IconButton\r\n                                            className={clsx(classes.expand, {\r\n                                                [classes.expandOpen]: expanded,\r\n                                            })}\r\n                                            onClick={handleExpandClick}\r\n                                            aria-expanded={expanded}\r\n                                            aria-label=\"show more\"\r\n                                        >\r\n                                            <ExpandMoreIcon className=\"text-white  mb-1\" fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <motion.button\r\n                                            whileTap={{ scale: 0.9 }}\r\n                                            className=\"w-24 absolute bottom-5 right-2 bg-gradient-to-r  d from-red-800 h-10 rounded-xl  text-lg  focus:ring-offset-indigo-800 focus:border-transparent transit to-red-500  text-white\" type=\"submit\">\r\n                                            End order\r\n                                        </motion.button>\r\n                                    </span>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <div>\r\n                                            <span>\r\n                                                <p className=\" text-white text-xl  uppercase\">Shorva</p>\r\n                                                <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                            <h2 className=\" text-yellow-400 text-xl\"> 2x </h2>\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>\r\n                                                <p className=\" text-white text-xl  uppercase\">Mastava</p>\r\n                                                <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                            <h2 className=\" text-yellow-400 text-xl\"> 4x </h2>\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>\r\n                                                <p className=\" text-white text-xl  uppercase\">Lavash</p>\r\n                                                <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                            <h2 className=\" text-yellow-400 text-xl\"> 1x </h2>\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>\r\n                                                <p className=\" text-white text-xl  uppercase\">Pepsi 0.5 </p>\r\n                                                <Divider style={{ background: \"white\", marginTop: \"-20px\" }} /></span>\r\n                                            <h2 className=\" text-yellow-400 text-xl\"> 1x </h2>\r\n\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card> */}\r\n                        </TabPane>\r\n\r\n                    </Tabs>\r\n                </div>\r\n                <motion.button\r\n\r\n                    onClick={handleLogout}\r\n                    className=\"bg-red-500 text-white  w-24    text-lg h-10  absolute bottom-4 left-12  \">\r\n                    Logout\r\n\r\n                </motion.button>\r\n            </Container >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Waiter\r\n","import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./home\";\r\nimport { CartProvider } from \"react-use-cart\";\r\nimport Overall from \"./components/overall/overall\";\r\nimport Login from \"./components/waiters/login\";\r\nimport Waiter from \"./components/waiters/waiters\";\r\nimport useAuth, { AuthProvider } from \"./context/useAuth\";\r\nimport { IPprovider } from \"./context/ipProvider\";\r\n\r\nfunction AuthenticatedRoute({ roles, ...props }) {\r\n  const { user } = useAuth();\r\n\r\n  if (!user) return <Redirect to=\"/login\" />;\r\n\r\n  return <Route {...props} />;\r\n}\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <IPprovider>\r\n          <Route path=\"/check\" component={Overall} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <AuthProvider>\r\n            <AuthenticatedRoute exact path=\"/waiter\" component={Waiter} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n          </AuthProvider>\r\n        </IPprovider>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  // const { user, loading, error, login, signUp, logout } = useAuth();\r\n\r\n  return (\r\n    <CartProvider>\r\n      <Routes />\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n","export default __webpack_public_path__ + \"static/media/ip.c50dee73.txt\";","import React, { createContext, useEffect, useState } from \"react\";\r\nimport raw from '../ip.txt'\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport const IpContext = createContext();\r\n\r\nexport function IPprovider({ children }) {\r\n    const [IPADDRES, setIPADDRES] = useState();\r\n    useEffect(() => {\r\n        fetch(raw)\r\n            .then((response) => response.text())\r\n            .then((text) =>\r\n                setIPADDRES(\r\n                    text\r\n                    // String(text)\r\n                    // .toLowerCase()\r\n                    // .match(\r\n                    //     '\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}\\b'\r\n\r\n                    // )\r\n                )\r\n            );\r\n    }, []);\r\n\r\n    const ip = IPADDRES;\r\n    const socket = io(ip);\r\n\r\n    return (\r\n        <IpContext.Provider value={[ip, socket]}>{children}</IpContext.Provider>\r\n    );\r\n}\r\n"],"sourceRoot":""}