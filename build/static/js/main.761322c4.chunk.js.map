{"version":3,"sources":["api/sessions.jsx","api/users.jsx","context/useAuth.jsx","components/content/content.jsx","components/content/placeholder.png","components/bottomCart/bottomcart.jsx","components/check/check.jsx","home.js","components/overall/overall.jsx","App.js","index.js","context/ipProvider.jsx"],"names":["email","password","ip","a","console","log","axios","post","session","response","data","delete","localStorage","getItem","AuthContext","createContext","user","loading","error","login","logout","AuthProvider","children","useState","setUser","setError","setLoading","loadingInitial","setLoadingInitial","useContext","IpContext","history","useHistory","sessionsApi","then","res","setItem","loginName","push","catch","message","finally","undefined","useEffect","window","location","pathname","usersApi","_error","memoedValue","useMemo","Provider","value","useAuth","Content","TabPane","Tabs","socket","quality","setQuality","pricer","setPrice","React","visible","setVisible","confirmLoading","setConfirmLoading","useCart","addItem","keys","Object","addCart","obj","showPopconfirm","handleOk","emit","sessionStorage","on","responsibleWaiter","success","setTimeout","handleCancel","handleChange","e","id","target","title","onConfirm","okButtonProps","onCancel","color","onClick","style","position","bottom","right","zIndex","type","unmountInactiveTabs","size","map","key","indx","tab","once","className","padding","marginBottom","container","spacing","index","_id","item","xs","sm","md","lg","in","unmountOnExit","display","isAvailable","width","height","src","productImage","placeholder","button","whileTap","scale","temprice","price","eval","qual","tempObj","name","fontSize","gutterBottom","variant","component","displayType","suffix","thousandSeparator","renderText","marginTop","description","Group","defaultValue","Button","disabled","price05","price07","gap","flexWrap","n","animation","Bottomcart","isOpen","opens","foobar","func","iOS","process","browser","test","navigator","userAgent","isEmpty","cartTotal","items","updateItemQuantity","emptyCart","anim","setAnim","input","afterEmtyping","table","money","foods","time","Date","getHours","getMinutes","method","url","date","reload","itemss","hidden","opacity","show","innerHeight","newDate","month","getMonth","getDate","getFullYear","anchor","open","onClose","disableBackdropTransition","disableDiscovery","maxWidth","initial","x","animate","transition","stiffness","duration","top","flexDirection","marginLeft","div","maxHeight","variants","quantity","p","Check","isModalVisible","setIsModalVisible","margin","to","shape","icon","motion","Divider","background","Grid","onOk","okText","cancelText","useStyles","makeStyles","stickToBottom","root","StyledBadge","withStyles","theme","badge","border","palette","paper","Badge","Home","classes","totalItems","setData","setValue","setOpens","count","setCount","token","URLSearchParams","search","get","onItemAdd","onItemUpdate","onItemRemove","isMobileOnly","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","showZero","badgeContent","Overall","service","setService","setsingleTable","parseInt","inputValue","setInputValue","inputValues","setInputValues","isIncorrect","setIncorrect","showModal","servicee","allOrders","allOrdersFromSingleTable","filter","reduce","acc","forEach","foodObj","q","allpPrice","allPrice","entries","allprice","columns","dataIndex","render","text","fontWeight","Container","y","transform","texAlign","min","max","filterTables","dataSource","Math","trunc","Password","isMobile","Login","lazy","Waiter","Routes","path","exact","fallback","App","ReactDOM","StrictMode","document","getElementById","io","IPprovider"],"mappings":"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","file":"static/js/main.761322c4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function login(email, password, ip) {\r\n    console.log()\r\n    const response = await axios.post(`${email.ip}/login`, { session: email, password });\r\n    return response.data;\r\n}\r\n\r\nexport async function logout() {\r\n    const response = await axios.delete(\"/api/sessions\");\r\n\r\n    return response.data.data;\r\n}","import axios from \"axios\";\r\n\r\nexport async function getCurrentUser() {\r\n    const response = await localStorage.getItem(\"details\");\r\n    return response;\r\n}\r\n\r\n","import React, {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as sessionsApi from \"../api/sessions\";\r\nimport * as usersApi from \"../api/users\";\r\nimport { IpContext } from \"./ipProvider\";\r\n\r\nconst AuthContext = createContext(\r\n    {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n        login: (email, password) => { },\r\n        logout: () => { },\r\n    }\r\n);\r\n\r\nexport function AuthProvider({\r\n    children,\r\n}) {\r\n    const [user, setUser] = useState();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingInitial, setLoadingInitial] = useState(true);\r\n    const [ip] = useContext(IpContext)\r\n\r\n    // We are using `react-router` for this example,\r\n    // but feel free to omit this or use the\r\n    // router of your choice.\r\n    const history = useHistory();\r\n\r\n    // If we change page, reset the error state.\r\n    useEffect(() => {\r\n        if (error) setError(null);\r\n    }, [window.location.pathname]);\r\n\r\n    // Check if there is a currently active session\r\n    // when the provider is mounted for the first time.\r\n    //\r\n    // If there is an error, it means there is no session.\r\n    //\r\n    // Finally, just signal the component that the initial load\r\n    // is over.\r\n    useEffect(() => {\r\n        usersApi.getCurrentUser()\r\n            .then((user) => user === \"false\" ? setUser(null) : setUser(localStorage.getItem(\"details\")))\r\n            .catch((_error) => { })\r\n            .finally(() => setLoadingInitial(false));\r\n    }, []);\r\n\r\n    // Flags the component loading state and posts the login\r\n    // data to the server.\r\n    //\r\n    // An error means that the email/password combination is\r\n    // not valid.\r\n    //\r\n    // Finally, just signal the component that loading the\r\n    // loading state is over.\r\n    function login(email, password,) {\r\n        setLoading(true);\r\n\r\n        sessionsApi.login({ email, password, ip })\r\n            .then((res) => {\r\n                localStorage.setItem(\"details\", res.loginName)\r\n                setUser(localStorage.getItem(\"details\"));\r\n                history.push(\"/waiter\");\r\n\r\n            })\r\n            .catch((error) => setError(error.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n\r\n            });\r\n    }\r\n\r\n\r\n\r\n    // Call the logout endpoint and then remove the user\r\n    // from the state.\r\n    function logout() {\r\n        sessionsApi.logout().then(() => setUser(undefined));\r\n    }\r\n\r\n    // Make the provider update only when it should.\r\n    // We only want to force re-renders if the user,\r\n    // loading or error states change.\r\n    //\r\n    // Whenever the `value` passed into a provider changes,\r\n    // the whole tree under the provider re-renders, and\r\n    // that can be very costly! Even in this case, where\r\n    // you only get re-renders when logging in and out\r\n    // we want to keep things very performant.\r\n    const memoedValue = useMemo(\r\n        () => ({\r\n            user,\r\n            loading,\r\n            error,\r\n            login,\r\n            logout,\r\n        }),\r\n        [user, loading, error]\r\n    );\r\n\r\n    // We only want to render the underlying app after we\r\n    // assert for the presence of a current user.\r\n    return (\r\n        <AuthContext.Provider value={memoedValue}>\r\n            {!loadingInitial && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n// Let's only export the `useAuth` hook instead of the context.\r\n// We only want to use the hook directly and never the context component.\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}","import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Radio, Image } from \"antd\";\r\nimport placeholder from \"./placeholder.png\";\r\nimport \"./content.css\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Tabs } from \"antd\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { motion } from \"framer-motion\";\r\n//MUI\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n//Others\r\nimport { IpContext } from \"../../context/ipProvider\"\r\nimport { Popconfirm } from 'antd';\r\nimport { message } from \"antd\";\r\nfunction Content({ data, loading }) {\r\n  const { TabPane } = Tabs;\r\n  const [ip, socket] = useContext(IpContext)\r\n  const [quality, setQuality] = useState({});\r\n  const [pricer, setPrice] = useState({});\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const { addItem } = useCart();\r\n  let keys = Object.keys(data);\r\n\r\n  const addCart = (obj) => {\r\n    addItem(obj);\r\n  };\r\n\r\n\r\n  const showPopconfirm = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    socket.emit(\"call-waiter\", sessionStorage.getItem(\"table\"))\r\n    setConfirmLoading(true);\r\n\r\n    socket.on(\"coming\", ({ responsibleWaiter }) => {\r\n      if (responsibleWaiter !== \"none\") {\r\n        message.success(\"Ofitsiant kelyapti\")\r\n        setConfirmLoading(false);\r\n        setVisible(false);\r\n\r\n      } else {\r\n        setTimeout(() => {\r\n          message.error(\"Ofitsiantlar hozir band, iltimos qayta uruning yoki buuyurtma qilib\", 4000)\r\n          setConfirmLoading(false);\r\n          setVisible(false);\r\n        }, 6000);\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleChange = (e, quality, id) => {\r\n    setPrice({ ...pricer, [id]: e.target.value });\r\n    setQuality({ ...quality, [id]: quality });\r\n  };\r\n  return (\r\n    <div\r\n    >\r\n      <Popconfirm\r\n        title=\"Ofitsiantni chaqrilaylikmi?\"\r\n        visible={visible}\r\n        onConfirm={handleOk}\r\n        okButtonProps={{ loading: confirmLoading }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Fab color=\"primary\" onClick={showPopconfirm} style={{ position: \"fixed\", bottom: \"80px\", right: \"10px \", zIndex: \"9999999\" }} aria-label=\"add\">\r\n          <NotificationsActiveIcon />\r\n        </Fab>\r\n      </Popconfirm>\r\n\r\n      <Tabs type=\"card\"\r\n        unmountInactiveTabs={true}\r\n        size={\"large\"}>\r\n        {keys &&\r\n          keys.map((key, indx) => (\r\n            <TabPane tab={key} key={indx}>\r\n              <LazyLoad once={true}>\r\n                <div>\r\n                  <div\r\n                    key={indx}\r\n                    className=\"h-screen mywrapper\"\r\n                    style={{\r\n\r\n                      padding: \"10px\",\r\n                      marginBottom: \"70PX\",\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      {data &&\r\n                        data[key].map(({ _id: id, ...obj }, index) => (\r\n                          <Grid item xs={6} sm={6} md={4} lg={3}>\r\n                            <LazyLoad once={true}>\r\n\r\n                              <Grow\r\n\r\n                                in={true}\r\n                                unmountOnExit>\r\n                                <Card style={{ display: obj.isAvailable === 34 ? \"none\" : \"block\" }} className=\"min-h-90\">\r\n                                  <div\r\n\r\n                                  >\r\n                                    <Image\r\n                                      width=\"100%\"\r\n                                      height=\"8rem\"\r\n                                      className=\"object-cover\"\r\n                                      src={obj.productImage ? `${ip}/` +\r\n                                        obj.productImage : placeholder}\r\n                                    />\r\n\r\n                                    <CardContent>\r\n                                      <div className=\"relative ml-auto \">\r\n                                        <motion.button\r\n                                          whileTap={{ scale: 0.9 }}\r\n                                          className=\"pplus absolute -right-2 -top-10  h-10 w-10 bg-red-100\"\r\n                                          onClick={() => {\r\n\r\n                                            let temprice = pricer[id]\r\n                                              ? pricer[id]\r\n                                              : \"obj.price\";\r\n                                            let price = eval(temprice);\r\n                                            let qual = quality[id] ? quality[id] : \"1\";\r\n\r\n                                            let tempObj = {\r\n                                              id: id + \"quality\" + qual,\r\n                                              quality: qual,\r\n                                              name: obj.name + \" \" + qual,\r\n                                              price: price,\r\n                                              productImage: obj.productImage,\r\n                                            };\r\n\r\n                                            addCart(tempObj);\r\n                                          }}\r\n                                        >\r\n                                          <AddIcon fontSize=\"medium\" />\r\n                                        </motion.button></div>\r\n                                      <Typography\r\n                                        gutterBottom\r\n                                        variant=\"h6\"\r\n                                        component=\"h3\"\r\n                                      >\r\n                                        {obj.name}\r\n                                      </Typography>\r\n                                      <CurrencyFormat\r\n                                        value={\r\n                                          pricer[id]\r\n                                            ? eval(pricer[id])\r\n                                            : obj.price\r\n                                        }\r\n                                        displayType={\"text\"}\r\n                                        suffix=\" sum\"\r\n                                        thousandSeparator={true}\r\n                                        renderText={(value) => (\r\n                                          <p\r\n                                            className=\"secondName\"\r\n                                            style={{ marginTop: \"1px\" }}\r\n                                          >\r\n                                            {value}{\" \"}\r\n                                          </p>\r\n                                        )}\r\n                                      />\r\n\r\n                                      <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"textSecondary\"\r\n                                        component=\"p\"\r\n                                      >\r\n                                        {obj.description}\r\n                                      </Typography>\r\n                                    </CardContent>\r\n                                  </div>\r\n                                  <CardActions>\r\n                                    <Radio.Group\r\n                                      defaultValue=\"obj.price\"\r\n                                      size=\"medium\"\r\n                                    >\r\n                                      <Radio.Button\r\n                                        onClick={(e) => handleChange(e, \"1\", id)}\r\n                                        disabled={obj.price ? false : true}\r\n                                        value=\"obj.price\"\r\n                                      >\r\n                                        1.0\r\n                                      </Radio.Button>\r\n                                      <Radio.Button\r\n                                        disabled={obj.price05 ? false : true}\r\n                                        onClick={(e) =>\r\n                                          handleChange(e, \"0.5\", id)\r\n                                        }\r\n                                        value=\"obj.price05\"\r\n                                      >\r\n                                        0.5\r\n                                      </Radio.Button>\r\n                                      <Radio.Button\r\n                                        disabled={obj.price07 ? false : true}\r\n                                        onClick={(e) =>\r\n                                          handleChange(e, \"0.7\", id)\r\n                                        }\r\n                                        value=\"obj.price07\"\r\n                                      >\r\n                                        0.7\r\n                                      </Radio.Button>\r\n                                    </Radio.Group>\r\n\r\n                                  </CardActions>\r\n                                </Card>\r\n                              </Grow>\r\n                            </LazyLoad>\r\n                          </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              </LazyLoad>\r\n            </TabPane>\r\n          ))}\r\n\r\n        {loading === true && (\r\n          <div\r\n            style={{\r\n              marginTop: \"100px\",\r\n              display: \"flex\",\r\n              gap: \"20px\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            {[1, 2, 3, 4, 5].map((n) => (\r\n              <div style={{ width: \"200px\", marginTop: \"10px\" }}>\r\n                <Skeleton\r\n                  height={40}\r\n                  style={{ marginBottom: -10, width: \"100%\" }}\r\n                />\r\n\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  height={100}\r\n                  style={{ marginBottom: -10 }}\r\n                />\r\n                <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                  <Skeleton style={{ marginBottom: 10, width: \"20%\" }} />\r\n                </div>\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  height={20}\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    marginTop: -10,\r\n                    width: \"70%\",\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/placeholder.50838fd7.png\";","import React, { useState, useContext } from 'react'\r\nimport 'react-spring-bottom-sheet/dist/style.css'\r\nimport { useCart } from \"react-use-cart\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../check/check.css\";\r\nimport axios from \"axios\";\r\nimport { Grid } from '@material-ui/core';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { message } from \"antd\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\nfunction Bottomcart({ opens: isOpen, func: foobar, }) {\r\n\r\n\r\n    const [ip, socket] = useContext(IpContext)\r\n\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n    const {\r\n        isEmpty,\r\n        cartTotal,\r\n        items,\r\n        updateItemQuantity,\r\n        emptyCart,\r\n    } = useCart();\r\n    function onDismiss() {\r\n        foobar(false);\r\n    }\r\n\r\n    ;\r\n    //Refs and states\r\n    const [anim, setAnim] = useState(0);\r\n    const input = sessionStorage.getItem(\"table\");\r\n\r\n\r\n    //Tracking click of end order vutton\r\n    const handleCLicker = () => {\r\n        if (isEmpty === false) {\r\n            if (input !== \"null\" || null) {\r\n                setAnim(1600);\r\n                setTimeout(function () {\r\n                    afterEmtyping()\r\n                }, 1000);\r\n            } else {\r\n                message.error(\"QR CODNI QAYTA SKANER QILING!\");\r\n            }\r\n        }\r\n    };\r\n    const afterEmtyping = () => {\r\n        socket.emit(\"post-order\", {\r\n            table: input,\r\n            money: cartTotal,\r\n            foods: items,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        });\r\n        axios({\r\n            method: \"post\",\r\n            url: `${ip}/status`,\r\n            data: {\r\n                date: date,\r\n                money: cartTotal,\r\n            },\r\n        });\r\n        emptyCart(); // runs first\r\n        setAnim(0); // runs second\r\n        message.success('Buyurtmangiz jonatildi');\r\n        window.location.reload();\r\n\r\n    }\r\n    //Emty cart animation\r\n    const cartEmpty = () => {\r\n        setAnim(1600);\r\n        setTimeout(function () {\r\n            emptyCart(); // runs first\r\n            window.location.reload();\r\n\r\n            setAnim(0); // runs second\r\n        }, 1000);\r\n    };\r\n    //Framer motion stuff\r\n    const itemss = {\r\n        hidden: { opacity: 0 },\r\n        show: { opacity: 1 },\r\n    };\r\n    const height = window.innerHeight - 325 + \"px\";\r\n    //Taking date\r\n    let newDate = new Date();\r\n    let month = newDate.getMonth() + 1;\r\n    let date = newDate.getDate() + \"/\" + month + \"/\" + newDate.getFullYear();\r\n\r\n    return (\r\n        <div>\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                width={200}\r\n                open={isOpen}\r\n                onClose={onDismiss}\r\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n            >\r\n                <Container maxWidth=\"sm\">\r\n\r\n                    <div\r\n                        initial={{ x: 360 }}\r\n                        animate={{ x: 0 }}\r\n                        transition={{ type: \"tween\", stiffness: 50, duration: 0.5 }}\r\n                        style={{ marginTop: \"20px\", padding: \"10px\" }}\r\n                    >\r\n                        <div style={{ display: \"flex\", top: 0, right: 0, }}>\r\n\r\n                            <div style={{\r\n                                display: \"flex\", flexDirection: \"row\",\r\n                                width: \"100%\",\r\n                                height: \"30px\",\r\n                                marginLeft: \"auto\",\r\n                                marginTop: \"auto\",\r\n                                marginBottom: \"5px\",\r\n                            }}>     <h3\r\n                                className=\"text-2xl\"\r\n                                style={{\r\n                                    color: \"black\",\r\n                                }}>\r\n                                    {\" \"}\r\n                                    Summa:\r\n                                    <CurrencyFormat\r\n                                        value={cartTotal}\r\n                                        displayType={\"text\"}\r\n                                        suffix=\" sum\"\r\n                                        thousandSeparator={true}\r\n                                        renderText={(value) => (\r\n                                            <span\r\n                                                className=\"text-2xl\"\r\n                                                style={{ color: \"#187CDF\", }}>\r\n                                                {value}\r\n                                            </span>\r\n                                        )}\r\n                                    />\r\n                                </h3>\r\n                                <motion.div\r\n                                    onClick={() => cartEmpty()}\r\n                                    whileTap={{ scale: 1.1 }}\r\n                                    style={{\r\n                                        width: \"80px\",\r\n                                        height: \"30px\",\r\n                                        marginLeft: \"auto\",\r\n                                        marginTop: \"auto\",\r\n                                        marginBottom: \"5px\",\r\n                                    }}\r\n                                >\r\n                                    <DeleteIcon\r\n                                        style={{\r\n                                            color: \"#d60505\",\r\n                                            width: \"100px\",\r\n                                            height: \"35px\",\r\n                                            marginLeft: \"auto\",\r\n                                            marginBottom: \"0px\",\r\n                                        }}\r\n                                    />\r\n                                </motion.div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Divider style={{ height: \"2px\" }} className=\"  bg-gray-900\" />\r\n\r\n                        <div className=\"mywrapperr\" style={{ maxHeight: height, marginBottom: \"70px\" }}>\r\n                            <div className=\"main\" >\r\n                                {items.map((item) => (\r\n                                    <div key={item.id} className=\"itemMain\">\r\n                                        <motion.div\r\n                                            variants={itemss}\r\n                                            transition={{ duration: 0.5 }}\r\n                                            initial={{ x: 460 }}\r\n                                            animate={{ x: anim }}\r\n                                            className=\"productts\"\r\n                                        >\r\n                                            <Grid container spacing={1} >\r\n                                                <Grid item xs={8} >\r\n\r\n                                                    <div className=\"-mt-3\">\r\n                                                        <p className=\"firstName\">{item.name}</p>\r\n\r\n                                                        <CurrencyFormat\r\n                                                            value={item.price * item.quantity}\r\n                                                            displayType={\"text\"}\r\n                                                            suffix=\" sum\"\r\n                                                            thousandSeparator={true}\r\n                                                            renderText={(value) => (\r\n                                                                <motion.p className=\"secondName\"> {value} </motion.p>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} >\r\n\r\n                                                    <div className=\"gap-2 flex absolute float-left flex-row flex-wrap flex-none w-full mr-auto\">\r\n                                                        <span className=\"mb-auto\">\r\n                                                            <motion.button\r\n                                                                className=\"pplus  h-8 w-8 \"\r\n                                                                onClick={() =>\r\n                                                                    updateItemQuantity(item.id, item.quantity + 1)\r\n                                                                }\r\n                                                            >\r\n                                                                <AddIcon />\r\n                                                            </motion.button>\r\n                                                        </span>\r\n                                                        <span className=\"text-lg    -mt-1\">\r\n                                                            <p >{item.quantity}</p>\r\n                                                        </span>\r\n                                                        <span className=\"  mb-auto\">\r\n                                                            <motion.button\r\n                                                                className=\"pplus  h-8 w-8\"\r\n                                                                whileTap={{ scale: 0.8 }}\r\n                                                                onClick={() =>\r\n                                                                    updateItemQuantity(item.id, item.quantity - 1)\r\n                                                                }\r\n                                                            >\r\n\r\n                                                                <RemoveIcon />\r\n                                                            </motion.button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                        </motion.div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Button stuff */}\r\n                            <div className='ml-20'>\r\n\r\n                                <motion.button\r\n                                    whileTap={{ scale: 1.1 }}\r\n                                    className=\"pl fixed w-full center  m-auto\"\r\n                                    onClick={handleCLicker}\r\n                                >\r\n                                    Jonatish{\" \"}\r\n                                </motion.button>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div >\r\n                </Container>\r\n\r\n            </SwipeableDrawer>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Bottomcart\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport { motion } from \"framer-motion\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"./check.css\";\r\nimport axios from \"axios\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Button } from \"antd\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Modal } from \"antd\";\r\nimport PlaylistAddCheckOutlinedIcon from '@material-ui/icons/PlaylistAddCheckOutlined';\r\nimport { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\n\r\nfunction Check() {\r\n\r\n  const [ip, socket] = useContext(IpContext)\r\n\r\n\r\n  const input = sessionStorage.getItem(\"table\");\r\n\r\n  const {\r\n    isEmpty,\r\n    cartTotal,\r\n    items,\r\n    updateItemQuantity,\r\n    emptyCart,\r\n  } = useCart();\r\n\r\n  //Refs and states\r\n  const [anim, setAnim] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  //Sending data to server to orders page\r\n  const setPosst = () => {\r\n    socket.emit(\"post-order\", {\r\n      table: input,\r\n      money: cartTotal,\r\n      foods: items,\r\n      time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n    });\r\n  };\r\n  //Sending data to server to stats page\r\n\r\n  const setPost = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${ip}/status`,\r\n      data: {\r\n        date: date,\r\n        money: cartTotal,\r\n      },\r\n    });\r\n  };\r\n  //Tracking click of end order vutton\r\n  const handleCLicker = () => {\r\n    if (isEmpty === false) {\r\n      if (input !== \"null\" || null) {\r\n        setAnim(1600);\r\n        setTimeout(function () {\r\n          setPosst();\r\n          setPost();\r\n          emptyCart(); // runs first\r\n          setAnim(0); // runs second\r\n          setIsModalVisible(false);\r\n        }, 1000);\r\n      } else {\r\n        message.error(\"QR CODNI QAYTA SKANER QILISNG\");\r\n      }\r\n    }\r\n  };\r\n  //Emty cart animation\r\n  const cartEmpty = () => {\r\n    setAnim(1600);\r\n    setTimeout(function () {\r\n      emptyCart(); // runs first\r\n      setAnim(0); // runs second\r\n    }, 1000);\r\n  };\r\n  //Framer motion stuff\r\n  const itemss = {\r\n    hidden: { opacity: 0 },\r\n    show: { opacity: 1 },\r\n  };\r\n  const height = window.innerHeight - 205 + \"px\";\r\n\r\n  //Taking date\r\n  let newDate = new Date();\r\n  let month = newDate.getMonth() + 1;\r\n  let date = newDate.getDate() + \"/\" + month + \"/\" + newDate.getFullYear();\r\n  return (\r\n\r\n    <div\r\n      style={{ marginTop: \"6px\" }\r\n      }\r\n    >\r\n      <div className=\"mywrapperr h-screen z-0\" >\r\n        <div style={{ display: \"flex\" }}>\r\n\r\n          <p style={{ fontSize: \"22px\", marginBottom: \"0px\", margin: \"0px auto\", }}>Chek:</p>\r\n          <Link to=\"/check\">\r\n\r\n            <Button type=\"dashed\" shape=\"\" icon={<PlaylistAddCheckOutlinedIcon />} >\r\n            </Button>\r\n          </Link>\r\n\r\n          <div style={{\r\n            display: \"flex\", flexDirection: \"column\",\r\n            width: \"80px\",\r\n            height: \"30px\",\r\n            marginLeft: \"auto\",\r\n            marginTop: \"auto\",\r\n            marginBottom: \"5px\",\r\n          }}>\r\n\r\n\r\n          </div>\r\n          <motion.div\r\n            onClick={() => cartEmpty()}\r\n            whileTap={{ scale: 0.8 }}\r\n            style={{\r\n              fontSize: \"14px\",\r\n              width: \"80px\",\r\n              height: \"30px\",\r\n              marginLeft: \"auto\",\r\n              marginTop: \"auto\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <DeleteIcon\r\n              style={{\r\n                color: \"#d60505\",\r\n                fontSize: \"14px\",\r\n                width: \"100px\",\r\n                height: \"40px\",\r\n                marginLeft: \"auto\",\r\n                marginBottom: \"0px\",\r\n              }}\r\n            />\r\n          </motion.div>\r\n        </div>\r\n\r\n        <Divider style={{ background: \"blue\" }} />\r\n\r\n        <div className=\"main \" style={{ height: height }}>\r\n          {items.map((item) => (\r\n            <div key={item.id} className=\"itemMain\">\r\n              <motion.div\r\n                variants={itemss}\r\n                transition={{ duration: 0.5 }}\r\n                initial={{ x: 460 }}\r\n                animate={{ x: anim }}\r\n                className=\"productts\"\r\n              >\r\n                <Grid container spacing={0} >\r\n                  <Grid item xs={6} >\r\n\r\n                    <div>\r\n                      <p className=\"firstName\">{item.name}</p>\r\n\r\n                      <CurrencyFormat\r\n                        value={item.price * item.quantity}\r\n                        displayType={\"text\"}\r\n                        suffix=\" sum\"\r\n                        thousandSeparator={true}\r\n                        renderText={(value) => (\r\n                          <motion.p className=\"secondName\"> {value} </motion.p>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6} >\r\n\r\n                    <div className=\"gap-2 flex flex-row flex-wrap flex-none w-full mr-auto\">\r\n                      <span className=\"mb-auto\">\r\n                        <motion.button\r\n                          className=\"pplus  h-8 w-8 \"\r\n                          onClick={() =>\r\n                            updateItemQuantity(item.id, item.quantity + 1)\r\n                          }\r\n                        >\r\n                          <AddIcon />\r\n                        </motion.button>\r\n                      </span>\r\n                      <span className=\"text-lg    -mt-1\">\r\n                        <p >{item.quantity}</p>\r\n                      </span>\r\n                      <span className=\"  mb-auto\">\r\n                        <motion.button\r\n                          className=\"pplus  h-8 w-8\"\r\n                          whileTap={{ scale: 0.8 }}\r\n                          onClick={() =>\r\n                            updateItemQuantity(item.id, item.quantity - 1)\r\n                          }\r\n                        >\r\n\r\n                          <RemoveIcon />\r\n                        </motion.button>\r\n                      </span>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </motion.div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Button stuff */}\r\n\r\n        <div className=\"p\">\r\n          <div className='p'>\r\n            <h3 style={{\r\n              color: \"black\", fontSize: \"24px\", margin: \"auto\",\r\n            }}>\r\n              {\" \"}\r\n              Jami:\r\n              <CurrencyFormat\r\n                value={cartTotal}\r\n                displayType={\"text\"}\r\n                suffix=\" sum\"\r\n                thousandSeparator={true}\r\n                renderText={(value) => (\r\n                  <span style={{ color: \"#187CDF\", fontSize: \"22px\" }}>\r\n                    {value}\r\n                  </span>\r\n                )}\r\n              />\r\n            </h3>\r\n          </div>\r\n\r\n          <motion.button\r\n            className=\"pl  center m-auto w-8/12\"\r\n            onClick={showModal}\r\n            whileTap={{ scale: 0.9 }}\r\n          >\r\n            Jonatish\r\n          </motion.button>\r\n\r\n        </div>\r\n      </div >\r\n      <Modal\r\n        title=\"Tasdiqlash\"\r\n        onOk={handleCLicker}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        okText=\"Ha\"\r\n        cancelText=\"Yoq\"\r\n        visible={isModalVisible}\r\n        height={100}\r\n      >\r\n        <p>Tasdiqlaysizmi?</p>\r\n      </Modal>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nexport default Check;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Empty } from \"antd\";\r\nimport Content from \"./components/content/content\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { CartProvider } from \"react-use-cart\";\r\nimport Check from \"./components/check/check\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MobileView, isMobileOnly } from \"react-device-detect\";\r\nimport Bottomcart from \"./components/bottomCart/bottomcart\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport \"./components/search/search.css\";\r\nimport { IpContext } from \"./context/ipProvider\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickToBottom: {\r\n    zIndex: \"2\",\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n  },\r\n}))(Badge);\r\n\r\nfunction Home() {\r\n  const [ip, socket] = useContext(IpContext);\r\n\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const { totalItems } = useCart();\r\n  const [data, setData] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [opens, setOpens] = useState(false);\r\n\r\n  const [count, setCount] = useState(totalItems);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const query = new URLSearchParams(window.location.search);\r\n    const token = query.get(\"table\");\r\n    sessionStorage.setItem(\"table\", token);\r\n    setTimeout(() => {\r\n      (async function () {\r\n        axios\r\n          .get(`${ip}/data`)\r\n          .then((res) => {\r\n            setData(res.data);\r\n            setLoading(false);\r\n          })\r\n          .catch(() => {\r\n            setError(true);\r\n          });\r\n      })();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  if (error === true)\r\n    return (\r\n      <Empty\r\n        description=\"Server is not working please refresh page or contact administrator\"\r\n        style={{ marginTop: \"200px\" }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <CartProvider\r\n        onItemAdd={() => setCount(count + 1)}\r\n        onItemUpdate={() => setCount(count + 1)}\r\n        onItemRemove={() => setCount(count - 1)}\r\n      >\r\n        <MobileView>\r\n          <Bottomcart opens={opens} func={setOpens} />\r\n        </MobileView>\r\n\r\n        <Grid container spacing={1}>\r\n          {/* <Grid item xs={12} lg={12} sm={12}>\r\n            <Search loading={loading} data={data} />\r\n          </Grid> */}\r\n          <Grid item xs={12} md={8} lg={9} sm={12}>\r\n            <LazyLoad once={true}>\r\n              <Content loading={loading} ip={ip} data={data} />\r\n            </LazyLoad>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} lg={3} sm={12}>\r\n            {isMobileOnly ? null : <Check />}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {isMobileOnly ? (\r\n          <BottomNavigation\r\n            ip={ip}\r\n            socket={socket}\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.stickToBottom}\r\n          >\r\n            <BottomNavigationAction label=\"Asosiy\" icon={<HomeIcon />} />\r\n            <BottomNavigationAction\r\n              onClick={() => setOpens(true)}\r\n              label=\"Savatcha\"\r\n              icon={\r\n                <StyledBadge showZero badgeContent={count} color=\"secondary\">\r\n                  <ShoppingCartIcon />\r\n                </StyledBadge>\r\n              }\r\n            />\r\n            <BottomNavigationAction\r\n              onClick={() => history.push(\"/check\")}\r\n              label=\"Buyurtmalar\"\r\n              icon={<RestoreIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        ) : null}\r\n      </CartProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Modal, Input, Table, InputNumber } from \"antd\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { IpContext } from \"../../context/ipProvider\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  stickToBottom: {\r\n    zIndex: \"2\",\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nfunction Overall() {\r\n\r\n  const [ip, socket] = useContext(IpContext)\r\n\r\n\r\n\r\n  //Router stuff\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const input = sessionStorage.getItem(\"table\");\r\n\r\n\r\n  //States \r\n  const [service, setService] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [table, setsingleTable] = useState([false]);\r\n  const [inputValue, setInputValue] = useState(parseInt(input));\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [inputValues, setInputValues] = useState(input);\r\n  const [isIncorrect, setIncorrect] = useState(false);\r\n  const [anim, setAnim] = useState(0);\r\n  const [value, setValue] = useState();\r\n\r\n  //Local password that changes   \r\n  const password = \"admin2020\";\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n\r\n  //Getting order list when page loaded\r\n  useEffect(() => {\r\n    socket.on(\"recieve-order\", (message) => {\r\n      (async function () {\r\n        const { data } = await axios.get(`${ip}/orders`);\r\n        setData(data);\r\n      })();\r\n    });\r\n    (async function () {\r\n      const { data } = await axios.get(`${ip}/orders`);\r\n      const { data: servicee } = await axios.get(\r\n        `${ip}/service`\r\n      );\r\n      setService(servicee);\r\n      setData(data);\r\n      if (data) {\r\n        let allOrders = {};\r\n        let allOrdersFromSingleTable = data\r\n          .filter((obj) => {\r\n            return obj.table === inputValue\r\n          })\r\n          .reduce((acc, obj) => {\r\n            acc.table = obj.table;\r\n            acc.foods = [];\r\n\r\n            acc.id = obj._id;\r\n            if (!acc.money) {\r\n              acc.money = obj.money;\r\n            } else {\r\n              acc.money = acc.money + obj.money;\r\n            }\r\n\r\n            obj.foods.forEach((foodObj) => {\r\n              if (!allOrders[foodObj.name]) {\r\n                allOrders[foodObj.name] = {\r\n                  q: foodObj.quantity,\r\n                  price: foodObj.price,\r\n                  allPrice: foodObj.price * foodObj.quantity,\r\n                };\r\n              } else {\r\n                allOrders[foodObj.name].q =\r\n                  allOrders[foodObj.name].q + foodObj.quantity;\r\n                allOrders[foodObj.name].price =\r\n                  allOrders[foodObj.name].price + foodObj.price;\r\n                allOrders[foodObj.name].allpPrice =\r\n                  allOrders[foodObj.name].allpPrice +\r\n                  foodObj.price * foodObj.quantity;\r\n              }\r\n            });\r\n            return acc;\r\n          }, {});\r\n        allOrders = Object.entries(allOrders).map(([key, value]) => {\r\n          return {\r\n            name: key,\r\n            quantity: value.q,\r\n            price: value.price,\r\n            allprice: value.allPrice,\r\n          };\r\n        });\r\n        allOrdersFromSingleTable.foods = allOrders;\r\n        // allOrdersFromSingleTable is what u should print\r\n        setsingleTable([allOrdersFromSingleTable]);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n  //table columns array\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <p>{text}</p>,\r\n    },\r\n    {\r\n      title: \"Narxi\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (value) => (\r\n        <p>\r\n          {\" \"}\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={\"text\"}\r\n            suffix=\" sum\"\r\n            thousandSeparator={true}\r\n            renderText={(value) => <p className=\"\">{value} </p>}\r\n          />\r\n        </p>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Soni\",\r\n      dataIndex: \"quantity\",\r\n      key: \"quantity\",\r\n    },\r\n    {\r\n      title: \"Summa\",\r\n      dataIndex: \"allprice\",\r\n      key: \"allPrice\",\r\n      render: (value) => (\r\n        <p>\r\n          {\" \"}\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={\"text\"}\r\n            suffix=\" sum\"\r\n            thousandSeparator={true}\r\n            renderText={(value) => (\r\n              <p style={{ color: \"#187CDF\", fontWeight: \"bold\" }}>{value} </p>\r\n            )}\r\n          />\r\n        </p>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //Function activated when clicked on button\r\n  function filterTables() {\r\n    let allOrders = {};\r\n    let allOrdersFromSingleTable = data\r\n      .filter((obj) => {\r\n        return obj.table === inputValue\r\n      })\r\n      .reduce((acc, obj) => {\r\n        acc.table = obj.table;\r\n        acc.foods = [];\r\n\r\n        acc.id = obj._id;\r\n        if (!acc.money) {\r\n          acc.money = obj.money;\r\n        } else {\r\n          acc.money = acc.money + obj.money;\r\n        }\r\n\r\n        obj.foods.forEach((foodObj) => {\r\n          if (!allOrders[foodObj.name]) {\r\n            allOrders[foodObj.name] = {\r\n              q: foodObj.quantity,\r\n              price: foodObj.price,\r\n              allPrice: foodObj.price * foodObj.quantity,\r\n            };\r\n          } else {\r\n            allOrders[foodObj.name].q =\r\n              allOrders[foodObj.name].q + foodObj.quantity;\r\n            allOrders[foodObj.name].price =\r\n              allOrders[foodObj.name].price + foodObj.price;\r\n            allOrders[foodObj.name].allpPrice =\r\n              allOrders[foodObj.name].allpPrice +\r\n              foodObj.price * foodObj.quantity;\r\n          }\r\n        });\r\n        return acc;\r\n      }, {});\r\n    allOrders = Object.entries(allOrders).map(([key, value]) => {\r\n      return {\r\n        name: key,\r\n        quantity: value.q,\r\n        price: value.price,\r\n        allprice: value.allPrice,\r\n      };\r\n    });\r\n    allOrdersFromSingleTable.foods = allOrders;\r\n    // allOrdersFromSingleTable is what u should print\r\n    setsingleTable([allOrdersFromSingleTable]);\r\n  }\r\n\r\n\r\n  //End order button action\r\n  const deleteObj = (id) => {\r\n    if (inputValues === password) {\r\n      socket.emit(\"done-order\", id);\r\n      setIsModalVisible(false);\r\n\r\n      setTimeout(() => {\r\n        setAnim(1800);\r\n        window.location.reload(true);\r\n\r\n      }, 1000);\r\n    } else {\r\n      setIncorrect(true);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div className=\"cheklist\"\r\n        initial={{ y: -900 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n\r\n        <Link to=\"/\">\r\n          <motion.button\r\n            whileTap={{ scale: 1.1 }}\r\n            className=\"filterButton\"\r\n            style={{\r\n              marginLeft: \"-140px\",\r\n              height: \"35px\",\r\n              transform: \"none\",\r\n              texAlign: \"center\",\r\n            }}\r\n          >\r\n            <ArrowBackOutlinedIcon />\r\n          </motion.button>          </Link>\r\n        <div style={{ marginBottom: \"20px\", width: \"100%\", display: \"flex\" }}>\r\n\r\n          <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n            <p style={{ fontSize: \"16px\" }}>Stol raqami: </p>\r\n            <InputNumber\r\n              placeholder={input}\r\n              defaultValue={input}\r\n              type=\"number\"\r\n              size=\"small\"\r\n              style={{ height: \"25px\", width: \"50px\" }}\r\n              min=\"0\"\r\n              max=\"500  \"\r\n              onChange={(e) => setInputValue(parseInt(e))}\r\n            />\r\n          </div>\r\n          <motion.button\r\n            whileTap={{ scale: 1.1 }}\r\n            className=\"filterButton\"\r\n            onClick={() => {\r\n              filterTables();\r\n              setAnim(0);\r\n            }}\r\n          >\r\n            Izlash\r\n          </motion.button>\r\n        </div>\r\n        {table.map((obj, index) => (\r\n          <div>\r\n            <motion.div initial={{ x: 0 }} animate={{ x: anim }}>\r\n              <Table size=\"middle\" columns={columns} dataSource={obj.foods} />\r\n            </motion.div>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"2px\" }}\r\n            >\r\n              <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                {\" \"}\r\n                <CurrencyFormat\r\n                  value={obj.money}\r\n                  displayType={\"text\"}\r\n                  suffix=\" sum\"\r\n                  thousandSeparator={true}\r\n                  renderText={(value) => (\r\n                    <p style={{ fontSize: \"19px\" }}>\r\n                      Jami: {\" \"}\r\n                      <span style={{ fontWeight: \"bold\", color: \"#187CDF\" }}>\r\n                        {value}\r\n                      </span>\r\n                    </p>\r\n                  )}\r\n                />\r\n                <p style={{ fontSize: \"19px\" }}>\r\n                  Usluga: {\"\"}\r\n                  <span style={{ fontWeight: \"bold\", color: \"#187CDF\" }}>\r\n                    {service}%\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div>\r\n                {\" \"}\r\n                <p style={{ fontSize: \"22px\" }}>\r\n                  Hammasi: {\"\"}\r\n                  <CurrencyFormat\r\n                    value={Math.trunc(obj.money + (obj.money / 100) * service)}\r\n                    displayType={\"text\"}\r\n                    suffix=\" sum\"\r\n                    thousandSeparator={true}\r\n                    renderText={(value) => (\r\n                      <span style={{ fontWeight: \"bold\", color: \"#FF3131\" }}>\r\n                        {value}\r\n                      </span>\r\n                    )}\r\n                  />\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <center>\r\n              <motion.button\r\n                whileTap={{ scale: 1.1 }}\r\n                className=\"pl w-10/12 m-auto\"\r\n                style={{ marginTop: \"60px\" }}\r\n                onClick={showModal}\r\n              >\r\n                Pul tolandi\r\n              </motion.button>\r\n            </center>\r\n            <Modal\r\n              title=\"Parol\"\r\n              onOk={() => deleteObj(obj.table)}\r\n              onCancel={() => setIsModalVisible(false)}\r\n              okText=\"Tasdiqlash\"\r\n              cancelText=\"Orqaga\"\r\n              visible={isModalVisible}\r\n              height={100}\r\n            >\r\n              <p>Parolni Kiriting</p>\r\n\r\n              {isIncorrect ? (\r\n                <h4 className=\"errorInput\" style={{ color: \"red\" }}>\r\n                  Parol Notogri{\" \"}\r\n                </h4>\r\n              ) : null}\r\n\r\n              <Input.Password\r\n                style={{ width: \"300px\" }}\r\n                onChange={(e) => setInputValues(e.target.value)}\r\n                placeholder=\"Parolni kiritng\"\r\n              />\r\n            </Modal>\r\n          </div>\r\n        ))}\r\n      </motion.div>\r\n\r\n      {isMobile ? (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.stickToBottom}\r\n        >\r\n          <BottomNavigationAction label=\"Asosiy\"\r\n            onClick={() => history.push(\"/\")}\r\n\r\n            icon={<HomeIcon />} />\r\n        </BottomNavigation>\r\n      ) : null}\r\n    </Container >\r\n\r\n  );\r\n}\r\n\r\nexport default Overall;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport Home from \"./home\";\r\nimport { CartProvider } from \"react-use-cart\";\r\nimport Overall from \"./components/overall/overall\";\r\nimport { AuthProvider } from \"./context/useAuth\";\r\nimport { IPprovider } from \"./context/ipProvider\";\r\nimport { Notifications } from \"react-push-notification\";\r\n\r\nconst Login = lazy(() => import(\"./components/waiters/login\"));\r\nconst Waiter = lazy(() => import(\"./components/waiters/waiters\"));\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <IPprovider>\r\n          <Route path=\"/check\" component={Overall} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <AuthProvider>\r\n            <Suspense fallback={<div>Загрузка...</div>}>\r\n              <Notifications />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route exact path=\"/waiter\" component={Waiter} />{\" \"}\r\n            </Suspense>\r\n          </AuthProvider>\r\n        </IPprovider>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <CartProvider>\r\n      <Routes />\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n","import React, {\r\n    createContext,\r\n} from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ip = \"http://192.168.1.200:4000\";\r\nconst socket = io(ip);\r\n\r\nexport const IpContext = createContext();\r\n\r\nexport function IPprovider({\r\n    children,\r\n}) {\r\n\r\n\r\n\r\n    return (\r\n        <IpContext.Provider value={[ip, socket]}>\r\n            {children}\r\n        </IpContext.Provider>\r\n    )\r\n}\r\n"],"sourceRoot":""}